{"version":3,"file":"headlessui.cjs.production.min.js","sources":["../src/utils/render.ts","../src/components/keyboard.ts","../src/utils/match.ts","../src/hooks/use-sync-refs.ts","../src/utils/bugs.ts","../src/hooks/use-iso-morphic-effect.ts","../src/hooks/use-id.ts","../src/utils/focus-management.ts","../src/internal/dom-containers.ts","../src/hooks/use-window-event.ts","../src/hooks/use-focus-trap.ts","../src/hooks/use-inert-others.ts","../src/internal/stack-context.tsx","../src/internal/portal-force-root.tsx","../src/components/portal/portal.tsx","../src/components/description/description.tsx","../src/components/dialog/dialog.tsx","../src/components/disclosure/disclosure.tsx","../src/utils/calculate-active-index.ts","../src/components/listbox/listbox.tsx","../src/utils/disposables.ts","../src/hooks/use-disposables.ts","../src/hooks/use-computed.ts","../src/components/menu/menu.tsx","../src/hooks/use-tree-walker.ts","../src/components/popover/popover.tsx","../src/components/label/label.tsx","../src/components/radio-group/radio-group.tsx","../src/hooks/use-flags.ts","../src/components/switch/switch.tsx","../src/components/transitions/utils/transition.ts","../src/hooks/use-is-initial-render.ts","../src/utils/once.ts","../src/components/transitions/transition.tsx","../src/hooks/use-is-mounted.ts","../src/components/focus-trap/focus-trap.tsx"],"sourcesContent":["import {\n  Fragment,\n  cloneElement,\n  createElement,\n  forwardRef,\n  isValidElement,\n\n  // Types\n  ElementType,\n  ReactElement,\n} from 'react'\nimport { Props, XOR, __, Expand } from '../types'\nimport { match } from './match'\n\nexport enum Features {\n  /** No features at all */\n  None = 0,\n\n  /**\n   * When used, this will allow us to use one of the render strategies.\n   *\n   * **The render strategies are:**\n   *    - **Unmount**   _(Will unmount the component.)_\n   *    - **Hidden**    _(Will hide the component using the [hidden] attribute.)_\n   */\n  RenderStrategy = 1,\n\n  /**\n   * When used, this will allow the user of our component to be in control. This can be used when\n   * you want to transition based on some state.\n   */\n  Static = 2,\n}\n\nexport enum RenderStrategy {\n  Unmount,\n  Hidden,\n}\n\ntype PropsForFeature<TPassedInFeatures extends Features, TForFeature extends Features, TProps> = {\n  [P in TPassedInFeatures]: P extends TForFeature ? TProps : __\n}[TPassedInFeatures]\n\nexport type PropsForFeatures<T extends Features> = XOR<\n  PropsForFeature<T, Features.Static, { static?: boolean }>,\n  PropsForFeature<T, Features.RenderStrategy, { unmount?: boolean }>\n>\n\nexport function render<TFeature extends Features, TTag extends ElementType, TSlot>({\n  props,\n  slot,\n  defaultTag,\n  features,\n  visible = true,\n  name,\n}: {\n  props: Expand<Props<TTag, TSlot, any> & PropsForFeatures<TFeature>>\n  slot?: TSlot\n  defaultTag: ElementType\n  features?: TFeature\n  visible?: boolean\n  name: string\n}) {\n  // Visible always render\n  if (visible) return _render(props, slot, defaultTag, name)\n\n  let featureFlags = features ?? Features.None\n\n  if (featureFlags & Features.Static) {\n    let { static: isStatic = false, ...rest } = props as PropsForFeatures<Features.Static>\n\n    // When the `static` prop is passed as `true`, then the user is in control, thus we don't care about anything else\n    if (isStatic) return _render(rest, slot, defaultTag, name)\n  }\n\n  if (featureFlags & Features.RenderStrategy) {\n    let { unmount = true, ...rest } = props as PropsForFeatures<Features.RenderStrategy>\n    let strategy = unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n    return match(strategy, {\n      [RenderStrategy.Unmount]() {\n        return null\n      },\n      [RenderStrategy.Hidden]() {\n        return _render(\n          { ...rest, ...{ hidden: true, style: { display: 'none' } } },\n          slot,\n          defaultTag,\n          name\n        )\n      },\n    })\n  }\n\n  // No features enabled, just render\n  return _render(props, slot, defaultTag, name)\n}\n\nfunction _render<TTag extends ElementType, TSlot>(\n  props: Props<TTag, TSlot> & { ref?: unknown },\n  slot: TSlot = {} as TSlot,\n  tag: ElementType,\n  name: string\n) {\n  let { as: Component = tag, children, refName = 'ref', ...passThroughProps } = omit(props, [\n    'unmount',\n    'static',\n  ])\n\n  // This allows us to use `<HeadlessUIComponent as={MyComponent} refName=\"innerRef\" />`\n  let refRelatedProps = props.ref !== undefined ? { [refName]: props.ref } : {}\n\n  let resolvedChildren = (typeof children === 'function' ? children(slot) : children) as\n    | ReactElement\n    | ReactElement[]\n\n  // Allow for className to be a function with the slot as the contents\n  if (passThroughProps.className && typeof passThroughProps.className === 'function') {\n    ;(passThroughProps as any).className = passThroughProps.className(slot)\n  }\n\n  if (Component === Fragment) {\n    if (Object.keys(passThroughProps).length > 0) {\n      if (\n        !isValidElement(resolvedChildren) ||\n        (Array.isArray(resolvedChildren) && resolvedChildren.length > 1)\n      ) {\n        throw new Error(\n          [\n            'Passing props on \"Fragment\"!',\n            '',\n            `The current component <${name} /> is rendering a \"Fragment\".`,\n            `However we need to passthrough the following props:`,\n            Object.keys(passThroughProps)\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n            '',\n            'You can apply a few solutions:',\n            [\n              'Add an `as=\"...\"` prop, to ensure that we render an actual element instead of a \"Fragment\".',\n              'Render a single element as the child so that we can forward the props onto that element.',\n            ]\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n          ].join('\\n')\n        )\n      }\n\n      return cloneElement(\n        resolvedChildren,\n        Object.assign(\n          {},\n          // Filter out undefined values so that they don't override the existing values\n          mergeEventFunctions(compact(omit(passThroughProps, ['ref'])), resolvedChildren.props, [\n            'onClick',\n          ]),\n          refRelatedProps\n        )\n      )\n    }\n  }\n\n  return createElement(\n    Component,\n    Object.assign({}, omit(passThroughProps, ['ref']), Component !== Fragment && refRelatedProps),\n    resolvedChildren\n  )\n}\n\n/**\n * We can use this function for the following useCase:\n *\n * <Menu.Item> <button onClick={console.log} /> </Menu.Item>\n *\n * Our `Menu.Item` will have an internal `onClick`, if you passthrough an `onClick` to the actual\n * `Menu.Item` component we will call it correctly. However, when we have an `onClick` on the actual\n * first child, that one should _also_ be called (but before this implementation, it was just\n * overriding the `onClick`). But it is only when we *render* that we have access to the existing\n * props of this component.\n *\n * It's a bit hacky, and not that clean, but it is something internal and we have tests to rely on\n * so that we can refactor this later (if needed).\n */\nfunction mergeEventFunctions(\n  passThroughProps: Record<string, any>,\n  existingProps: Record<string, any>,\n  functionsToMerge: string[]\n) {\n  let clone = Object.assign({}, passThroughProps)\n  for (let func of functionsToMerge) {\n    if (passThroughProps[func] !== undefined && existingProps[func] !== undefined) {\n      Object.assign(clone, {\n        [func](event: { defaultPrevented: boolean }) {\n          // Props we control\n          if (!event.defaultPrevented) passThroughProps[func](event)\n\n          // Existing props on the component\n          if (!event.defaultPrevented) existingProps[func](event)\n        },\n      })\n    }\n  }\n\n  return clone\n}\n\n/**\n * This is a hack, but basically we want to keep the full 'API' of the component, but we do want to\n * wrap it in a forwardRef so that we _can_ passthrough the ref\n */\nexport function forwardRefWithAs<T extends { name: string; displayName?: string }>(\n  component: T\n): T & { displayName: string } {\n  return Object.assign(forwardRef((component as unknown) as any) as any, {\n    displayName: component.displayName ?? component.name,\n  })\n}\n\nfunction compact<T extends Record<any, any>>(object: T) {\n  let clone = Object.assign({}, object)\n  for (let key in clone) {\n    if (clone[key] === undefined) delete clone[key]\n  }\n  return clone\n}\n\nfunction omit<T extends Record<any, any>>(object: T, keysToOmit: string[] = []) {\n  let clone = Object.assign({}, object)\n  for (let key of keysToOmit) {\n    if (key in clone) delete clone[key]\n  }\n  return clone\n}\n","// TODO: This must already exist somewhere, right? ðŸ¤”\n// Ref: https://www.w3.org/TR/uievents-key/#named-key-attribute-values\nexport enum Keys {\n  Space = ' ',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  Backspace = 'Backspace',\n\n  ArrowLeft = 'ArrowLeft',\n  ArrowUp = 'ArrowUp',\n  ArrowRight = 'ArrowRight',\n  ArrowDown = 'ArrowDown',\n\n  Home = 'Home',\n  End = 'End',\n\n  PageUp = 'PageUp',\n  PageDown = 'PageDown',\n\n  Tab = 'Tab',\n}\n","export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | ((...args: any[]) => TReturnValue)>,\n  ...args: any[]\n): TReturnValue {\n  if (value in lookup) {\n    let returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue(...args) : returnValue\n  }\n\n  let error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map(key => `\"${key}\"`)\n      .join(', ')}.`\n  )\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match)\n  throw error\n}\n","import { useRef, useEffect, useCallback } from 'react'\n\nexport function useSyncRefs<TType>(\n  ...refs: (React.MutableRefObject<TType> | ((instance: TType) => void) | null)[]\n) {\n  let cache = useRef(refs)\n\n  useEffect(() => {\n    cache.current = refs\n  }, [refs])\n\n  return useCallback(\n    (value: TType) => {\n      for (let ref of cache.current) {\n        if (ref == null) continue\n        if (typeof ref === 'function') ref(value)\n        else ref.current = value\n      }\n    },\n    [cache]\n  )\n}\n","// See: https://github.com/facebook/react/issues/7711\n// See: https://github.com/facebook/react/pull/20612\n// See: https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#concept-fe-disabled (2.)\nexport function isDisabledReactIssue7711(element: Element): boolean {\n  let parent = element.parentElement\n  let legend = null\n\n  while (parent && !(parent instanceof HTMLFieldSetElement)) {\n    if (parent instanceof HTMLLegendElement) legend = parent\n    parent = parent.parentElement\n  }\n\n  let isParentDisabled = parent?.getAttribute('disabled') === '' ?? false\n  if (isParentDisabled && isFirstLegend(legend)) return false\n\n  return isParentDisabled\n}\n\nfunction isFirstLegend(element: HTMLLegendElement | null): boolean {\n  if (!element) return false\n\n  let previous = element.previousElementSibling\n\n  while (previous !== null) {\n    if (previous instanceof HTMLLegendElement) return false\n    previous = previous.previousElementSibling\n  }\n\n  return true\n}\n","import { useLayoutEffect, useEffect } from 'react'\n\nexport const useIsoMorphicEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import { useState, useEffect } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\n// We used a \"simple\" approach first which worked for SSR and rehydration on the client. However we\n// didn't take care of the Suspense case. To fix this we used the approach the @reach-ui/auto-id\n// uses.\n//\n// Credits: https://github.com/reach/reach-ui/blob/develop/packages/auto-id/src/index.tsx\n\nlet state = { serverHandoffComplete: false }\nlet id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  let [id, setId] = useState(state.serverHandoffComplete ? generateId : null)\n\n  useIsoMorphicEffect(() => {\n    if (id === null) setId(generateId())\n  }, [id])\n\n  useEffect(() => {\n    if (state.serverHandoffComplete === false) state.serverHandoffComplete = true\n  }, [])\n\n  return id != null ? '' + id : undefined\n}\n","import { match } from './match'\n\n// Credit:\n//  - https://stackoverflow.com/a/30753870\nlet focusableSelector = [\n  '[contentEditable=true]',\n  '[tabindex]',\n  'a[href]',\n  'area[href]',\n  'button:not([disabled])',\n  'iframe',\n  'input:not([disabled])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n]\n  .map(\n    process.env.NODE_ENV === 'test'\n      ? // TODO: Remove this once JSDOM fixes the issue where an element that is\n        // \"hidden\" can be the document.activeElement, because this is not possible\n        // in real browsers.\n        selector => `${selector}:not([tabindex='-1']):not([style*='display: none'])`\n      : selector => `${selector}:not([tabindex='-1'])`\n  )\n  .join(',')\n\nexport enum Focus {\n  /** Focus the first non-disabled element */\n  First = 1 << 0,\n\n  /** Focus the previous non-disabled element */\n  Previous = 1 << 1,\n\n  /** Focus the next non-disabled element */\n  Next = 1 << 2,\n\n  /** Focus the last non-disabled element */\n  Last = 1 << 3,\n\n  /** Wrap tab around */\n  WrapAround = 1 << 4,\n\n  /** Prevent scrolling the focusable elements into view */\n  NoScroll = 1 << 5,\n}\n\nexport enum FocusResult {\n  Error,\n  Overflow,\n  Success,\n  Underflow,\n}\n\nenum Direction {\n  Previous = -1,\n  Next = 1,\n}\n\nexport function getFocusableElements(container: HTMLElement | null = document.body) {\n  if (container == null) return []\n  return Array.from(container.querySelectorAll<HTMLElement>(focusableSelector))\n}\n\nexport enum FocusableMode {\n  /** The element itself must be focusable. */\n  Strict,\n\n  /** The element should be inside of a focusable element. */\n  Loose,\n}\n\nexport function isFocusableElement(\n  element: HTMLElement,\n  mode: FocusableMode = FocusableMode.Strict\n) {\n  if (element === document.body) return false\n\n  return match(mode, {\n    [FocusableMode.Strict]() {\n      return element.matches(focusableSelector)\n    },\n    [FocusableMode.Loose]() {\n      let next: HTMLElement | null = element\n\n      while (next !== null) {\n        if (next.matches(focusableSelector)) return true\n        next = next.parentElement\n      }\n\n      return false\n    },\n  })\n}\n\nexport function focusElement(element: HTMLElement | null) {\n  element?.focus({ preventScroll: true })\n}\n\nexport function focusIn(container: HTMLElement | HTMLElement[], focus: Focus) {\n  let elements = Array.isArray(container) ? container : getFocusableElements(container)\n  let active = document.activeElement as HTMLElement\n\n  let direction = (() => {\n    if (focus & (Focus.First | Focus.Next)) return Direction.Next\n    if (focus & (Focus.Previous | Focus.Last)) return Direction.Previous\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let startIndex = (() => {\n    if (focus & Focus.First) return 0\n    if (focus & Focus.Previous) return Math.max(0, elements.indexOf(active)) - 1\n    if (focus & Focus.Next) return Math.max(0, elements.indexOf(active)) + 1\n    if (focus & Focus.Last) return elements.length - 1\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let focusOptions = focus & Focus.NoScroll ? { preventScroll: true } : {}\n\n  let offset = 0\n  let total = elements.length\n  let next = undefined\n  do {\n    // Guard against infinite loops\n    if (offset >= total || offset + total <= 0) return FocusResult.Error\n\n    let nextIdx = startIndex + offset\n\n    if (focus & Focus.WrapAround) {\n      nextIdx = (nextIdx + total) % total\n    } else {\n      if (nextIdx < 0) return FocusResult.Underflow\n      if (nextIdx >= total) return FocusResult.Overflow\n    }\n\n    next = elements[nextIdx]\n\n    // Try the focus the next element, might not work if it is \"hidden\" to the user.\n    next?.focus(focusOptions)\n\n    // Try the next one in line\n    offset += direction\n  } while (next !== document.activeElement)\n\n  // This is a little weird, but let me try and explain: There are a few scenario's\n  // in chrome for example where a focused `<a>` tag does not get the default focus\n  // styles and sometimes they do. This highly depends on whether you started by\n  // clicking or by using your keyboard. When you programmatically add focus `anchor.focus()`\n  // then the active element (document.activeElement) is this anchor, which is expected.\n  // However in that case the default focus styles are not applied *unless* you\n  // also add this tabindex.\n  if (!next.hasAttribute('tabindex')) next.setAttribute('tabindex', '0')\n\n  return FocusResult.Success\n}\n","export function contains(containers: Set<HTMLElement>, element: HTMLElement) {\n  for (let container of containers) {\n    if (container.contains(element)) return true\n  }\n\n  return false\n}\n","import { useEffect } from 'react'\n\nexport function useWindowEvent<TType extends keyof WindowEventMap>(\n  type: TType,\n  listener: (this: Window, ev: WindowEventMap[TType]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  useEffect(() => {\n    window.addEventListener(type, listener, options)\n    return () => window.removeEventListener(type, listener, options)\n  }, [type, listener, options])\n}\n","import {\n  useRef,\n  // Types\n  MutableRefObject,\n} from 'react'\n\nimport { Keys } from '../components/keyboard'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\nimport { focusElement, focusIn, Focus, FocusResult } from '../utils/focus-management'\nimport { contains } from '../internal/dom-containers'\nimport { useWindowEvent } from './use-window-event'\n\nexport function useFocusTrap(\n  containers: MutableRefObject<Set<HTMLElement>>,\n  enabled: boolean = true,\n  options: { initialFocus?: MutableRefObject<HTMLElement | null> } = {}\n) {\n  let restoreElement = useRef<HTMLElement | null>(\n    typeof window !== 'undefined' ? (document.activeElement as HTMLElement) : null\n  )\n  let previousActiveElement = useRef<HTMLElement | null>(null)\n  let mounted = useRef(false)\n\n  // Handle initial focus\n  useIsoMorphicEffect(() => {\n    if (!enabled) return\n    if (containers.current.size !== 1) return\n\n    mounted.current = true\n\n    let activeElement = document.activeElement as HTMLElement\n\n    if (options.initialFocus?.current) {\n      if (options.initialFocus?.current === activeElement) {\n        return // Initial focus ref is already the active element\n      }\n    } else if (contains(containers.current, activeElement)) {\n      return // Already focused within Dialog\n    }\n\n    restoreElement.current = activeElement\n\n    // Try to focus the initialFocus ref\n    if (options.initialFocus?.current) {\n      focusElement(options.initialFocus.current)\n    } else {\n      let couldFocus = false\n      for (let container of containers.current) {\n        let result = focusIn(container, Focus.First)\n        if (result === FocusResult.Success) {\n          couldFocus = true\n          break\n        }\n      }\n\n      if (!couldFocus) throw new Error('There are no focusable elements inside the <FocusTrap />')\n    }\n\n    previousActiveElement.current = document.activeElement as HTMLElement\n\n    return () => {\n      mounted.current = false\n      focusElement(restoreElement.current)\n      restoreElement.current = null\n      previousActiveElement.current = null\n    }\n  }, [enabled, containers, mounted, options.initialFocus])\n\n  // Handle Tab & Shift+Tab keyboard events\n  useWindowEvent('keydown', event => {\n    if (!enabled) return\n    if (event.key !== Keys.Tab) return\n    if (!document.activeElement) return\n    if (containers.current.size !== 1) return\n\n    event.preventDefault()\n\n    for (let element of containers.current) {\n      let result = focusIn(\n        element,\n        (event.shiftKey ? Focus.Previous : Focus.Next) | Focus.WrapAround\n      )\n\n      if (result === FocusResult.Success) {\n        previousActiveElement.current = document.activeElement as HTMLElement\n        break\n      }\n    }\n  })\n\n  // Prevent programmatically escaping\n  useWindowEvent(\n    'focus',\n    event => {\n      if (!enabled) return\n      if (containers.current.size !== 1) return\n\n      let previous = previousActiveElement.current\n      if (!previous) return\n      if (!mounted.current) return\n\n      let toElement = event.target as HTMLElement | null\n\n      if (toElement && toElement instanceof HTMLElement) {\n        if (!contains(containers.current, toElement)) {\n          event.preventDefault()\n          event.stopPropagation()\n          focusElement(previous)\n        } else {\n          previousActiveElement.current = toElement\n          focusElement(toElement)\n        }\n      } else {\n        focusElement(previousActiveElement.current)\n      }\n    },\n    true\n  )\n}\n","import { MutableRefObject } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\nlet interactables = new Set<HTMLElement>()\nlet originals = new Map<HTMLElement, { 'aria-hidden': string | null; inert: boolean }>()\n\nfunction inert(element: HTMLElement) {\n  element.setAttribute('aria-hidden', 'true')\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = true\n}\n\nfunction restore(element: HTMLElement) {\n  let original = originals.get(element)\n  if (!original) return\n\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden')\n  else element.setAttribute('aria-hidden', original['aria-hidden'])\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = original.inert\n}\n\nexport function useInertOthers<TElement extends HTMLElement>(\n  container: MutableRefObject<TElement | null>,\n  enabled: boolean = true\n) {\n  useIsoMorphicEffect(() => {\n    if (!enabled) return\n    if (!container.current) return\n\n    let element = container.current\n\n    // Mark myself as an interactable element\n    interactables.add(element)\n\n    // Restore elements that now contain an interactable child\n    for (let original of originals.keys()) {\n      if (original.contains(element)) {\n        restore(original)\n        originals.delete(original)\n      }\n    }\n\n    // Collect direct children of the body\n    document.querySelectorAll('body > *').forEach(child => {\n      if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n      // Skip the interactables, and the parents of the interactables\n      for (let interactable of interactables) {\n        if (child.contains(interactable)) return\n      }\n\n      // Keep track of the elements\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert,\n        })\n\n        // Mutate the element\n        inert(child)\n      }\n    })\n\n    return () => {\n      // Inert is disabled on the current element\n      interactables.delete(element)\n\n      // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        document.querySelectorAll('body > *').forEach(child => {\n          if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n          // Skip already inert parents\n          if (originals.has(child)) return\n\n          // Skip the interactables, and the parents of the interactables\n          for (let interactable of interactables) {\n            if (child.contains(interactable)) return\n          }\n\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert,\n          })\n\n          // Mutate the element\n          inert(child)\n        })\n      } else {\n        for (let element of originals.keys()) {\n          // Restore\n          restore(element)\n\n          // Cleanup\n          originals.delete(element)\n        }\n      }\n    }\n  }, [enabled])\n}\n","import React, { ReactNode, createContext, useContext, useCallback } from 'react'\nimport { useIsoMorphicEffect } from '../hooks/use-iso-morphic-effect'\n\ntype OnUpdate = (message: StackMessage, element: HTMLElement) => void\n\nlet StackContext = createContext<OnUpdate>(() => {})\nStackContext.displayName = 'StackContext'\n\nexport enum StackMessage {\n  AddElement,\n  RemoveElement,\n}\n\nexport function useStackContext() {\n  return useContext(StackContext)\n}\n\nexport function useElementStack(element: HTMLElement | null) {\n  let notify = useStackContext()\n\n  useIsoMorphicEffect(() => {\n    if (!element) return\n\n    notify(StackMessage.AddElement, element)\n    return () => notify(StackMessage.RemoveElement, element)\n  }, [element])\n}\n\nexport function StackProvider({\n  children,\n  onUpdate,\n}: {\n  children: ReactNode\n  onUpdate?: OnUpdate\n}) {\n  let parentUpdate = useStackContext()\n\n  let notify = useCallback(\n    (...args: Parameters<OnUpdate>) => {\n      // Notify our layer\n      onUpdate?.(...args)\n\n      // Notify the parent\n      parentUpdate(...args)\n    },\n    [parentUpdate, onUpdate]\n  )\n\n  return <StackContext.Provider value={notify}>{children}</StackContext.Provider>\n}\n","import React, {\n  createContext,\n  useContext,\n\n  // Types\n  ReactNode,\n} from 'react'\n\nlet ForcePortalRootContext = createContext(false)\n\nexport function usePortalRoot() {\n  return useContext(ForcePortalRootContext)\n}\n\ninterface ForcePortalRootProps {\n  force: boolean\n  children: ReactNode\n}\n\nexport function ForcePortalRoot(props: ForcePortalRootProps) {\n  return (\n    <ForcePortalRootContext.Provider value={props.force}>\n      {props.children}\n    </ForcePortalRootContext.Provider>\n  )\n}\n","import React, {\n  Fragment,\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\nimport { createPortal } from 'react-dom'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useElementStack, StackProvider } from '../../internal/stack-context'\nimport { usePortalRoot } from '../../internal/portal-force-root'\n\nfunction usePortalTarget(): HTMLElement | null {\n  let forceInRoot = usePortalRoot()\n  let groupTarget = useContext(PortalGroupContext)\n  let [target, setTarget] = useState(() => {\n    // Group context is used, but still null\n    if (!forceInRoot && groupTarget !== null) return null\n\n    // No group context is used, let's create a default portal root\n    if (typeof window === 'undefined') return null\n    let existingRoot = document.getElementById('headlessui-portal-root')\n    if (existingRoot) return existingRoot\n\n    let root = document.createElement('div')\n    root.setAttribute('id', 'headlessui-portal-root')\n    return document.body.appendChild(root)\n  })\n\n  useEffect(() => {\n    if (forceInRoot) return\n    if (groupTarget === null) return\n    setTarget(groupTarget.current)\n  }, [groupTarget, setTarget, forceInRoot])\n\n  return target\n}\n\n// ---\n\nlet DEFAULT_PORTAL_TAG = Fragment\ninterface PortalRenderPropArg {}\n\nexport function Portal<TTag extends ElementType = typeof DEFAULT_PORTAL_TAG>(\n  props: Props<TTag, PortalRenderPropArg>\n) {\n  let passthroughProps = props\n  let target = usePortalTarget()\n  let [element] = useState<HTMLDivElement | null>(() =>\n    typeof window === 'undefined' ? null : document.createElement('div')\n  )\n\n  useElementStack(element)\n\n  useIsoMorphicEffect(() => {\n    if (!target) return\n    if (!element) return\n\n    target.appendChild(element)\n\n    return () => {\n      if (!target) return\n      if (!element) return\n\n      target.removeChild(element)\n\n      if (target.childNodes.length <= 0) {\n        target.parentElement?.removeChild(target)\n      }\n    }\n  }, [target, element])\n\n  return (\n    <StackProvider>\n      {!target || !element\n        ? null\n        : createPortal(\n            render({\n              props: passthroughProps,\n              defaultTag: DEFAULT_PORTAL_TAG,\n              name: 'Portal',\n            }),\n            element\n          )}\n    </StackProvider>\n  )\n}\n\n// ---\n\nlet DEFAULT_GROUP_TAG = Fragment\ninterface GroupRenderPropArg {}\n\nlet PortalGroupContext = createContext<MutableRefObject<HTMLElement | null> | null>(null)\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_GROUP_TAG>(\n  props: Props<TTag, GroupRenderPropArg> & {\n    target: MutableRefObject<HTMLElement | null>\n  }\n) {\n  let { target, ...passthroughProps } = props\n\n  return (\n    <PortalGroupContext.Provider value={target}>\n      {render({\n        props: passthroughProps,\n        defaultTag: DEFAULT_GROUP_TAG,\n        name: 'Popover.Group',\n      })}\n    </PortalGroupContext.Provider>\n  )\n}\n\n// ---\n\nPortal.Group = Group\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  ReactNode,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\n// ---\n\ninterface SharedData {\n  slot?: {}\n  name?: string\n  props?: {}\n}\n\nlet DescriptionContext = createContext<\n  ({ register(value: string): () => void } & SharedData) | null\n>(null)\n\nfunction useDescriptionContext() {\n  let context = useContext(DescriptionContext)\n  if (context === null) {\n    let err = new Error(\n      'You used a <Description /> component, but it is not inside a relevant parent.'\n    )\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDescriptionContext)\n    throw err\n  }\n  return context\n}\n\ninterface DescriptionProviderProps extends SharedData {\n  children: ReactNode\n}\n\nexport function useDescriptions(): [\n  string | undefined,\n  (props: DescriptionProviderProps) => JSX.Element\n] {\n  let [descriptionIds, setDescriptionIds] = useState<string[]>([])\n\n  return [\n    // The actual id's as string or undefined\n    descriptionIds.length > 0 ? descriptionIds.join(' ') : undefined,\n\n    // The provider component\n    useMemo(() => {\n      return function DescriptionProvider(props: DescriptionProviderProps) {\n        let register = useCallback((value: string) => {\n          setDescriptionIds(existing => [...existing, value])\n\n          return () =>\n            setDescriptionIds(existing => {\n              let clone = existing.slice()\n              let idx = clone.indexOf(value)\n              if (idx !== -1) clone.splice(idx, 1)\n              return clone\n            })\n        }, [])\n\n        let contextBag = useMemo(\n          () => ({ register, slot: props.slot, name: props.name, props: props.props }),\n          [register, props.slot, props.name, props.props]\n        )\n\n        return (\n          <DescriptionContext.Provider value={contextBag}>\n            {props.children}\n          </DescriptionContext.Provider>\n        )\n      }\n    }, [setDescriptionIds]),\n  ]\n}\n\n// ---\n\nlet DEFAULT_DESCRIPTION_TAG = 'p' as const\ninterface DescriptionRenderPropArg {}\ntype DescriptionPropsWeControl = 'id'\n\nexport function Description<TTag extends ElementType = typeof DEFAULT_DESCRIPTION_TAG>(\n  props: Props<TTag, DescriptionRenderPropArg, DescriptionPropsWeControl>\n) {\n  let context = useDescriptionContext()\n  let id = `headlessui-description-${useId()}`\n\n  useIsoMorphicEffect(() => context.register(id), [id, context.register])\n\n  let passThroughProps = props\n  let propsWeControl = { ...context.props, id }\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot: context.slot || {},\n    defaultTag: DEFAULT_DESCRIPTION_TAG,\n    name: context.name || 'Description',\n  })\n}\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#dialog_modal\nimport React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  ContextType,\n  ElementType,\n  MouseEvent as ReactMouseEvent,\n  KeyboardEvent as ReactKeyboardEvent,\n  MutableRefObject,\n  Ref,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { useId } from '../../hooks/use-id'\nimport { useFocusTrap } from '../../hooks/use-focus-trap'\nimport { useInertOthers } from '../../hooks/use-inert-others'\nimport { Portal } from '../../components/portal/portal'\nimport { StackProvider, StackMessage } from '../../internal/stack-context'\nimport { ForcePortalRoot } from '../../internal/portal-force-root'\nimport { contains } from '../../internal/dom-containers'\nimport { Description, useDescriptions } from '../description/description'\nimport { useWindowEvent } from '../../hooks/use-window-event'\n\nenum DialogStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  titleId: string | null\n}\n\nenum ActionTypes {\n  SetTitleId,\n}\n\ntype Actions = { type: ActionTypes.SetTitleId; id: string | null }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.SetTitleId](state, action) {\n    if (state.titleId === action.id) return state\n    return { ...state, titleId: action.id }\n  },\n}\n\nlet DialogContext = createContext<\n  | [\n      {\n        dialogState: DialogStates\n        close(): void\n        setTitleId(id: string | null): void\n      },\n      StateDefinition\n    ]\n  | null\n>(null)\nDialogContext.displayName = 'DialogContext'\n\nfunction useDialogContext(component: string) {\n  let context = useContext(DialogContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Dialog.displayName} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDialogContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_DIALOG_TAG = 'div' as const\ninterface DialogRenderPropArg {\n  open: boolean\n}\ntype DialogPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'aria-modal'\n  | 'aria-describedby'\n  | 'aria-labelledby'\n  | 'onClick'\n\nlet DialogRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet DialogRoot = forwardRefWithAs(function Dialog<\n  TTag extends ElementType = typeof DEFAULT_DIALOG_TAG\n>(\n  props: Props<TTag, DialogRenderPropArg, DialogPropsWeControl> &\n    PropsForFeatures<typeof DialogRenderFeatures> & {\n      open: boolean\n      onClose(value: boolean): void\n      initialFocus?: MutableRefObject<HTMLElement | null>\n    },\n  ref: Ref<HTMLDivElement>\n) {\n  let { open, onClose, initialFocus, ...rest } = props\n\n  let containers = useRef<Set<HTMLElement>>(new Set())\n  let internalDialogRef = useRef<HTMLDivElement | null>(null)\n  let dialogRef = useSyncRefs(internalDialogRef, ref)\n\n  // Validations\n  let hasOpen = props.hasOwnProperty('open')\n  let hasOnClose = props.hasOwnProperty('onClose')\n  if (!hasOpen && !hasOnClose) {\n    throw new Error(\n      `You have to provide an \\`open\\` and an \\`onClose\\` prop to the \\`Dialog\\` component.`\n    )\n  }\n\n  if (!hasOpen) {\n    throw new Error(\n      `You provided an \\`onClose\\` prop to the \\`Dialog\\`, but forgot an \\`open\\` prop.`\n    )\n  }\n\n  if (!hasOnClose) {\n    throw new Error(\n      `You provided an \\`open\\` prop to the \\`Dialog\\`, but forgot an \\`onClose\\` prop.`\n    )\n  }\n\n  if (typeof open !== 'boolean') {\n    throw new Error(\n      `You provided an \\`open\\` prop to the \\`Dialog\\`, but the value is not a boolean. Received: ${open}`\n    )\n  }\n\n  if (typeof onClose !== 'function') {\n    throw new Error(\n      `You provided an \\`onClose\\` prop to the \\`Dialog\\`, but the value is not a function. Received: ${onClose}`\n    )\n  }\n\n  let dialogState = open ? DialogStates.Open : DialogStates.Closed\n\n  let [state, dispatch] = useReducer(stateReducer, {\n    titleId: null,\n    descriptionId: null,\n  } as StateDefinition)\n\n  let close = useCallback(() => onClose(false), [onClose])\n\n  let setTitleId = useCallback(\n    (id: string | null) => dispatch({ type: ActionTypes.SetTitleId, id }),\n    [dispatch]\n  )\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (dialogState !== DialogStates.Open) return\n    if (containers.current.size !== 1) return\n    if (contains(containers.current, target)) return\n\n    close()\n  })\n\n  // Scroll lock\n  useEffect(() => {\n    if (dialogState !== DialogStates.Open) return\n\n    let overflow = document.documentElement.style.overflow\n    let paddingRight = document.documentElement.style.paddingRight\n\n    let scrollbarWidth = window.innerWidth - document.documentElement.clientWidth\n\n    document.documentElement.style.overflow = 'hidden'\n    document.documentElement.style.paddingRight = `${scrollbarWidth}px`\n\n    return () => {\n      document.documentElement.style.overflow = overflow\n      document.documentElement.style.paddingRight = paddingRight\n    }\n  }, [dialogState])\n\n  // Trigger close when the FocusTrap gets hidden\n  useEffect(() => {\n    if (dialogState !== DialogStates.Open) return\n    if (!internalDialogRef.current) return\n\n    let observer = new IntersectionObserver(entries => {\n      for (let entry of entries) {\n        if (\n          entry.boundingClientRect.x === 0 &&\n          entry.boundingClientRect.y === 0 &&\n          entry.boundingClientRect.width === 0 &&\n          entry.boundingClientRect.height === 0\n        ) {\n          close()\n        }\n      }\n    })\n\n    observer.observe(internalDialogRef.current)\n\n    return () => observer.disconnect()\n  }, [dialogState, internalDialogRef, close])\n\n  let enabled = dialogState === DialogStates.Open\n\n  useFocusTrap(containers, enabled, { initialFocus })\n  useInertOthers(internalDialogRef, enabled)\n  let [describedby, DescriptionProvider] = useDescriptions()\n\n  let id = `headlessui-dialog-${useId()}`\n\n  let contextBag = useMemo<ContextType<typeof DialogContext>>(\n    () => [{ dialogState, close, setTitleId }, state],\n    [dialogState, state, close, setTitleId]\n  )\n\n  let slot = useMemo<DialogRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n\n  let propsWeControl = {\n    ref: dialogRef,\n    id,\n    role: 'dialog',\n    'aria-modal': dialogState === DialogStates.Open ? true : undefined,\n    'aria-labelledby': state.titleId,\n    'aria-describedby': describedby,\n    onClick(event: ReactMouseEvent) {\n      event.stopPropagation()\n    },\n\n    // Handle `Escape` to close\n    onKeyDown(event: ReactKeyboardEvent) {\n      if (event.key !== Keys.Escape) return\n      if (dialogState !== DialogStates.Open) return\n      if (containers.current.size > 1) return // 1 is myself, otherwise other elements in the Stack\n      event.preventDefault()\n      event.stopPropagation()\n      close()\n    },\n  }\n  let passthroughProps = rest\n\n  return (\n    <StackProvider\n      onUpdate={(message, element) => {\n        return match(message, {\n          [StackMessage.AddElement]() {\n            containers.current.add(element)\n          },\n          [StackMessage.RemoveElement]() {\n            containers.current.delete(element)\n          },\n        })\n      }}\n    >\n      <ForcePortalRoot force={true}>\n        <Portal>\n          <DialogContext.Provider value={contextBag}>\n            <Portal.Group target={internalDialogRef}>\n              <ForcePortalRoot force={false}>\n                <DescriptionProvider slot={slot} name=\"Dialog.Description\">\n                  {render({\n                    props: { ...passthroughProps, ...propsWeControl },\n                    slot,\n                    defaultTag: DEFAULT_DIALOG_TAG,\n                    features: DialogRenderFeatures,\n                    visible: dialogState === DialogStates.Open,\n                    name: 'Dialog',\n                  })}\n                </DescriptionProvider>\n              </ForcePortalRoot>\n            </Portal.Group>\n          </DialogContext.Provider>\n        </Portal>\n      </ForcePortalRoot>\n    </StackProvider>\n  )\n})\n\n// ---\n\nlet DEFAULT_OVERLAY_TAG = 'div' as const\ninterface OverlayRenderPropArg {\n  open: boolean\n}\ntype OverlayPropsWeControl = 'id' | 'aria-hidden' | 'onClick'\n\nlet Overlay = forwardRefWithAs(function Overlay<\n  TTag extends ElementType = typeof DEFAULT_OVERLAY_TAG\n>(props: Props<TTag, OverlayRenderPropArg, OverlayPropsWeControl>, ref: Ref<HTMLDivElement>) {\n  let [{ dialogState, close }] = useDialogContext([Dialog.displayName, Overlay.name].join('.'))\n  let overlayRef = useSyncRefs(ref)\n\n  let id = `headlessui-dialog-overlay-${useId()}`\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      event.preventDefault()\n      event.stopPropagation()\n      close()\n    },\n    [close]\n  )\n\n  let slot = useMemo<OverlayRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n  let propsWeControl = {\n    ref: overlayRef,\n    id,\n    'aria-hidden': true,\n    onClick: handleClick,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OVERLAY_TAG,\n    name: 'Dialog.Overlay',\n  })\n})\n\n// ---\n\nlet DEFAULT_TITLE_TAG = 'h2' as const\ninterface TitleRenderPropArg {\n  open: boolean\n}\ntype TitlePropsWeControl = 'id'\n\nfunction Title<TTag extends ElementType = typeof DEFAULT_TITLE_TAG>(\n  props: Props<TTag, TitleRenderPropArg, TitlePropsWeControl>\n) {\n  let [{ dialogState, setTitleId }] = useDialogContext([Dialog.displayName, Title.name].join('.'))\n\n  let id = `headlessui-dialog-title-${useId()}`\n\n  useEffect(() => {\n    setTitleId(id)\n    return () => setTitleId(null)\n  }, [id, setTitleId])\n\n  let slot = useMemo<TitleRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n  let propsWeControl = { id }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_TITLE_TAG,\n    name: 'Dialog.Title',\n  })\n}\n\n// ---\n\nexport let Dialog = Object.assign(DialogRoot, { Overlay, Title, Description })\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#disclosure\nimport React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n\n  // Types\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  Ref,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\n\nenum DisclosureStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  disclosureState: DisclosureStates\n\n  linkedPanel: boolean\n\n  buttonId: string\n  panelId: string\n}\n\nenum ActionTypes {\n  ToggleDisclosure,\n\n  SetButtonId,\n  SetPanelId,\n\n  LinkPanel,\n  UnlinkPanel,\n}\n\ntype Actions =\n  | { type: ActionTypes.ToggleDisclosure }\n  | { type: ActionTypes.SetButtonId; buttonId: string }\n  | { type: ActionTypes.SetPanelId; panelId: string }\n  | { type: ActionTypes.LinkPanel }\n  | { type: ActionTypes.UnlinkPanel }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.ToggleDisclosure]: state => ({\n    ...state,\n    disclosureState: match(state.disclosureState, {\n      [DisclosureStates.Open]: DisclosureStates.Closed,\n      [DisclosureStates.Closed]: DisclosureStates.Open,\n    }),\n  }),\n  [ActionTypes.LinkPanel](state) {\n    if (state.linkedPanel === true) return state\n    return { ...state, linkedPanel: true }\n  },\n  [ActionTypes.UnlinkPanel](state) {\n    if (state.linkedPanel === false) return state\n    return { ...state, linkedPanel: false }\n  },\n  [ActionTypes.SetButtonId](state, action) {\n    if (state.buttonId === action.buttonId) return state\n    return { ...state, buttonId: action.buttonId }\n  },\n  [ActionTypes.SetPanelId](state, action) {\n    if (state.panelId === action.panelId) return state\n    return { ...state, panelId: action.panelId }\n  },\n}\n\nlet DisclosureContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nDisclosureContext.displayName = 'DisclosureContext'\n\nfunction useDisclosureContext(component: string) {\n  let context = useContext(DisclosureContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Disclosure.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_DISCLOSURE_TAG = Fragment\ninterface DisclosureRenderPropArg {\n  open: boolean\n}\n\nexport function Disclosure<TTag extends ElementType = typeof DEFAULT_DISCLOSURE_TAG>(\n  props: Props<TTag, DisclosureRenderPropArg> & {\n    defaultOpen?: boolean\n  }\n) {\n  let { defaultOpen = false, ...passthroughProps } = props\n  let buttonId = `headlessui-disclosure-button-${useId()}`\n  let panelId = `headlessui-disclosure-panel-${useId()}`\n\n  let reducerBag = useReducer(stateReducer, {\n    disclosureState: defaultOpen ? DisclosureStates.Open : DisclosureStates.Closed,\n    linkedPanel: false,\n    buttonId,\n    panelId,\n  } as StateDefinition)\n  let [{ disclosureState }, dispatch] = reducerBag\n\n  useEffect(() => dispatch({ type: ActionTypes.SetButtonId, buttonId }), [buttonId, dispatch])\n  useEffect(() => dispatch({ type: ActionTypes.SetPanelId, panelId }), [panelId, dispatch])\n\n  let slot = useMemo<DisclosureRenderPropArg>(\n    () => ({ open: disclosureState === DisclosureStates.Open }),\n    [disclosureState]\n  )\n\n  return (\n    <DisclosureContext.Provider value={reducerBag}>\n      {render({\n        props: passthroughProps,\n        slot,\n        defaultTag: DEFAULT_DISCLOSURE_TAG,\n        name: 'Disclosure',\n      })}\n    </DisclosureContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-expanded'\n  | 'aria-controls'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = useDisclosureContext([Disclosure.name, Button.name].join('.'))\n  let buttonRef = useSyncRefs(ref)\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      switch (event.key) {\n        case Keys.Space:\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.ToggleDisclosure })\n          break\n      }\n    },\n    [dispatch]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return\n      if (props.disabled) return\n      dispatch({ type: ActionTypes.ToggleDisclosure })\n    },\n    [dispatch, props.disabled]\n  )\n\n  let slot = useMemo<ButtonRenderPropArg>(\n    () => ({ open: state.disclosureState === DisclosureStates.Open }),\n    [state]\n  )\n\n  let passthroughProps = props\n  let propsWeControl = {\n    ref: buttonRef,\n    id: state.buttonId,\n    type: 'button',\n    'aria-expanded': state.disclosureState === DisclosureStates.Open ? true : undefined,\n    'aria-controls': state.linkedPanel ? state.panelId : undefined,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Disclosure.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_PANEL_TAG = 'div' as const\ninterface PanelRenderPropArg {\n  open: boolean\n}\ntype PanelPropsWeControl = 'id'\n\nlet PanelRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Panel = forwardRefWithAs(function Panel<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(\n  props: Props<TTag, PanelRenderPropArg, PanelPropsWeControl> &\n    PropsForFeatures<typeof PanelRenderFeatures>,\n  ref: Ref<HTMLDivElement>\n) {\n  let [state, dispatch] = useDisclosureContext([Disclosure.name, Panel.name].join('.'))\n  let panelRef = useSyncRefs(ref, () => {\n    if (state.linkedPanel) return\n    dispatch({ type: ActionTypes.LinkPanel })\n  })\n\n  // Unlink on \"unmount\" myself\n  useEffect(() => () => dispatch({ type: ActionTypes.UnlinkPanel }), [dispatch])\n\n  // Unlink on \"unmount\" children\n  useEffect(() => {\n    if (state.disclosureState === DisclosureStates.Closed && (props.unmount ?? true)) {\n      dispatch({ type: ActionTypes.UnlinkPanel })\n    }\n  }, [state.disclosureState, props.unmount, dispatch])\n\n  let slot = useMemo<PanelRenderPropArg>(\n    () => ({ open: state.disclosureState === DisclosureStates.Open }),\n    [state]\n  )\n  let propsWeControl = {\n    ref: panelRef,\n    id: state.panelId,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_PANEL_TAG,\n    features: PanelRenderFeatures,\n    visible: state.disclosureState === DisclosureStates.Open,\n    name: 'Disclosure.Panel',\n  })\n})\n\n// ---\n\nDisclosure.Button = Button\nDisclosure.Panel = Panel\n","function assertNever(x: never): never {\n  throw new Error('Unexpected object: ' + x)\n}\n\nexport enum Focus {\n  /** Focus the first non-disabled item. */\n  First,\n\n  /** Focus the previous non-disabled item. */\n  Previous,\n\n  /** Focus the next non-disabled item. */\n  Next,\n\n  /** Focus the last non-disabled item. */\n  Last,\n\n  /** Focus a specific item based on the `id` of the item. */\n  Specific,\n\n  /** Focus no items at all. */\n  Nothing,\n}\n\nexport function calculateActiveIndex<TItem>(\n  action: { focus: Focus.Specific; id: string } | { focus: Exclude<Focus, Focus.Specific> },\n  resolvers: {\n    resolveItems(): TItem[]\n    resolveActiveIndex(): number | null\n    resolveId(item: TItem): string\n    resolveDisabled(item: TItem): boolean\n  }\n) {\n  let items = resolvers.resolveItems()\n  if (items.length <= 0) return null\n\n  let currentActiveIndex = resolvers.resolveActiveIndex()\n  let activeIndex = currentActiveIndex ?? -1\n\n  let nextActiveIndex = (() => {\n    switch (action.focus) {\n      case Focus.First:\n        return items.findIndex(item => !resolvers.resolveDisabled(item))\n\n      case Focus.Previous: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex((item, idx, all) => {\n            if (activeIndex !== -1 && all.length - idx - 1 >= activeIndex) return false\n            return !resolvers.resolveDisabled(item)\n          })\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Next:\n        return items.findIndex((item, idx) => {\n          if (idx <= activeIndex) return false\n          return !resolvers.resolveDisabled(item)\n        })\n\n      case Focus.Last: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex(item => !resolvers.resolveDisabled(item))\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Specific:\n        return items.findIndex(item => resolvers.resolveId(item) === action.id)\n\n      case Focus.Nothing:\n        return null\n\n      default:\n        assertNever(action)\n    }\n  })()\n\n  return nextActiveIndex === -1 ? currentActiveIndex : nextActiveIndex\n}\n","import React, {\n  Fragment,\n  createContext,\n  createRef,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  MutableRefObject,\n  Ref,\n} from 'react'\n\nimport { useDisposables } from '../../hooks/use-disposables'\nimport { useId } from '../../hooks/use-id'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useComputed } from '../../hooks/use-computed'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { Props } from '../../types'\nimport { Features, forwardRefWithAs, PropsForFeatures, render } from '../../utils/render'\nimport { match } from '../../utils/match'\nimport { disposables } from '../../utils/disposables'\nimport { Keys } from '../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { isFocusableElement, FocusableMode } from '../../utils/focus-management'\nimport { useWindowEvent } from '../../hooks/use-window-event'\n\nenum ListboxStates {\n  Open,\n  Closed,\n}\n\ntype ListboxOptionDataRef = MutableRefObject<{\n  textValue?: string\n  disabled: boolean\n  value: unknown\n}>\n\ninterface StateDefinition {\n  listboxState: ListboxStates\n  propsRef: MutableRefObject<{ value: unknown; onChange(value: unknown): void }>\n  labelRef: MutableRefObject<HTMLLabelElement | null>\n  buttonRef: MutableRefObject<HTMLButtonElement | null>\n  optionsRef: MutableRefObject<HTMLUListElement | null>\n  disabled: boolean\n  options: { id: string; dataRef: ListboxOptionDataRef }[]\n  searchQuery: string\n  activeOptionIndex: number | null\n}\n\nenum ActionTypes {\n  OpenListbox,\n  CloseListbox,\n\n  SetDisabled,\n\n  GoToOption,\n  Search,\n  ClearSearch,\n\n  RegisterOption,\n  UnregisterOption,\n}\n\ntype Actions =\n  | { type: ActionTypes.CloseListbox }\n  | { type: ActionTypes.OpenListbox }\n  | { type: ActionTypes.SetDisabled; disabled: boolean }\n  | { type: ActionTypes.GoToOption; focus: Focus.Specific; id: string }\n  | { type: ActionTypes.GoToOption; focus: Exclude<Focus, Focus.Specific> }\n  | { type: ActionTypes.Search; value: string }\n  | { type: ActionTypes.ClearSearch }\n  | { type: ActionTypes.RegisterOption; id: string; dataRef: ListboxOptionDataRef }\n  | { type: ActionTypes.UnregisterOption; id: string }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.CloseListbox](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n    return { ...state, activeOptionIndex: null, listboxState: ListboxStates.Closed }\n  },\n  [ActionTypes.OpenListbox](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Open) return state\n    return { ...state, listboxState: ListboxStates.Open }\n  },\n  [ActionTypes.SetDisabled](state, action) {\n    if (state.disabled === action.disabled) return state\n    return { ...state, disabled: action.disabled }\n  },\n  [ActionTypes.GoToOption](state, action) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n\n    let activeOptionIndex = calculateActiveIndex(action, {\n      resolveItems: () => state.options,\n      resolveActiveIndex: () => state.activeOptionIndex,\n      resolveId: item => item.id,\n      resolveDisabled: item => item.dataRef.current.disabled,\n    })\n\n    if (state.searchQuery === '' && state.activeOptionIndex === activeOptionIndex) return state\n    return { ...state, searchQuery: '', activeOptionIndex }\n  },\n  [ActionTypes.Search]: (state, action) => {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n\n    let searchQuery = state.searchQuery + action.value.toLowerCase()\n    let match = state.options.findIndex(\n      option =>\n        !option.dataRef.current.disabled &&\n        option.dataRef.current.textValue?.startsWith(searchQuery)\n    )\n\n    if (match === -1 || match === state.activeOptionIndex) return { ...state, searchQuery }\n    return { ...state, searchQuery, activeOptionIndex: match }\n  },\n  [ActionTypes.ClearSearch](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n    if (state.searchQuery === '') return state\n    return { ...state, searchQuery: '' }\n  },\n  [ActionTypes.RegisterOption]: (state, action) => ({\n    ...state,\n    options: [...state.options, { id: action.id, dataRef: action.dataRef }],\n  }),\n  [ActionTypes.UnregisterOption]: (state, action) => {\n    let nextOptions = state.options.slice()\n    let currentActiveOption =\n      state.activeOptionIndex !== null ? nextOptions[state.activeOptionIndex] : null\n\n    let idx = nextOptions.findIndex(a => a.id === action.id)\n\n    if (idx !== -1) nextOptions.splice(idx, 1)\n\n    return {\n      ...state,\n      options: nextOptions,\n      activeOptionIndex: (() => {\n        if (idx === state.activeOptionIndex) return null\n        if (currentActiveOption === null) return null\n\n        // If we removed the option before the actual active index, then it would be out of sync. To\n        // fix this, we will find the correct (new) index position.\n        return nextOptions.indexOf(currentActiveOption)\n      })(),\n    }\n  },\n}\n\nlet ListboxContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nListboxContext.displayName = 'ListboxContext'\n\nfunction useListboxContext(component: string) {\n  let context = useContext(ListboxContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Listbox.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_LISTBOX_TAG = Fragment\ninterface ListboxRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\n\nexport function Listbox<TTag extends ElementType = typeof DEFAULT_LISTBOX_TAG, TType = string>(\n  props: Props<TTag, ListboxRenderPropArg, 'value' | 'onChange'> & {\n    value: TType\n    onChange(value: TType): void\n    disabled?: boolean\n  }\n) {\n  let { value, onChange, disabled = false, ...passThroughProps } = props\n  let reducerBag = useReducer(stateReducer, {\n    listboxState: ListboxStates.Closed,\n    propsRef: { current: { value, onChange } },\n    labelRef: createRef(),\n    buttonRef: createRef(),\n    optionsRef: createRef(),\n    disabled,\n    options: [],\n    searchQuery: '',\n    activeOptionIndex: null,\n  } as StateDefinition)\n  let [{ listboxState, propsRef, optionsRef, buttonRef }, dispatch] = reducerBag\n\n  useIsoMorphicEffect(() => {\n    propsRef.current.value = value\n  }, [value, propsRef])\n  useIsoMorphicEffect(() => {\n    propsRef.current.onChange = onChange\n  }, [onChange, propsRef])\n  useIsoMorphicEffect(() => dispatch({ type: ActionTypes.SetDisabled, disabled }), [disabled])\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (listboxState !== ListboxStates.Open) return\n\n    if (buttonRef.current?.contains(target)) return\n    if (optionsRef.current?.contains(target)) return\n\n    dispatch({ type: ActionTypes.CloseListbox })\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      event.preventDefault()\n      buttonRef.current?.focus()\n    }\n  })\n\n  let slot = useMemo<ListboxRenderPropArg>(\n    () => ({ open: listboxState === ListboxStates.Open, disabled }),\n    [listboxState, disabled]\n  )\n\n  return (\n    <ListboxContext.Provider value={reducerBag}>\n      {render({\n        props: passThroughProps,\n        slot,\n        defaultTag: DEFAULT_LISTBOX_TAG,\n        name: 'Listbox',\n      })}\n    </ListboxContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-haspopup'\n  | 'aria-controls'\n  | 'aria-expanded'\n  | 'aria-labelledby'\n  | 'disabled'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = useListboxContext([Listbox.name, Button.name].join('.'))\n  let buttonRef = useSyncRefs(state.buttonRef, ref)\n\n  let id = `headlessui-listbox-button-${useId()}`\n  let d = useDisposables()\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.OpenListbox })\n          d.nextFrame(() => {\n            if (!state.propsRef.current.value)\n              dispatch({ type: ActionTypes.GoToOption, focus: Focus.First })\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.OpenListbox })\n          d.nextFrame(() => {\n            if (!state.propsRef.current.value)\n              dispatch({ type: ActionTypes.GoToOption, focus: Focus.Last })\n          })\n          break\n      }\n    },\n    [dispatch, state, d]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      if (state.listboxState === ListboxStates.Open) {\n        dispatch({ type: ActionTypes.CloseListbox })\n        d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        dispatch({ type: ActionTypes.OpenListbox })\n      }\n    },\n    [dispatch, d, state]\n  )\n\n  let labelledby = useComputed(() => {\n    if (!state.labelRef.current) return undefined\n    return [state.labelRef.current.id, id].join(' ')\n  }, [state.labelRef.current, id])\n\n  let slot = useMemo<ButtonRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open, disabled: state.disabled }),\n    [state]\n  )\n  let passthroughProps = props\n  let propsWeControl = {\n    ref: buttonRef,\n    id,\n    type: 'button',\n    'aria-haspopup': true,\n    'aria-controls': state.optionsRef.current?.id,\n    'aria-expanded': state.listboxState === ListboxStates.Open ? true : undefined,\n    'aria-labelledby': labelledby,\n    disabled: state.disabled,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Listbox.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_LABEL_TAG = 'label' as const\ninterface LabelRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\ntype LabelPropsWeControl = 'id' | 'ref' | 'onClick'\n\nfunction Label<TTag extends ElementType = typeof DEFAULT_LABEL_TAG>(\n  props: Props<TTag, LabelRenderPropArg, LabelPropsWeControl>\n) {\n  let [state] = useListboxContext([Listbox.name, Label.name].join('.'))\n  let id = `headlessui-listbox-label-${useId()}`\n\n  let handleClick = useCallback(() => state.buttonRef.current?.focus({ preventScroll: true }), [\n    state.buttonRef,\n  ])\n\n  let slot = useMemo<LabelRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open, disabled: state.disabled }),\n    [state]\n  )\n  let propsWeControl = { ref: state.labelRef, id, onClick: handleClick }\n  return render({\n    props: { ...props, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: 'Listbox.Label',\n  })\n}\n\n// ---\n\nlet DEFAULT_OPTIONS_TAG = 'ul' as const\ninterface OptionsRenderPropArg {\n  open: boolean\n}\ntype OptionsPropsWeControl =\n  | 'aria-activedescendant'\n  | 'aria-labelledby'\n  | 'id'\n  | 'onKeyDown'\n  | 'role'\n  | 'tabIndex'\n\nlet OptionsRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Options = forwardRefWithAs(function Options<\n  TTag extends ElementType = typeof DEFAULT_OPTIONS_TAG\n>(\n  props: Props<TTag, OptionsRenderPropArg, OptionsPropsWeControl> &\n    PropsForFeatures<typeof OptionsRenderFeatures>,\n  ref: Ref<HTMLUListElement>\n) {\n  let [state, dispatch] = useListboxContext([Listbox.name, Options.name].join('.'))\n  let optionsRef = useSyncRefs(state.optionsRef, ref)\n\n  let id = `headlessui-listbox-options-${useId()}`\n  let d = useDisposables()\n  let searchDisposables = useDisposables()\n\n  useIsoMorphicEffect(() => {\n    let container = state.optionsRef.current\n    if (!container) return\n    if (state.listboxState !== ListboxStates.Open) return\n    if (container === document.activeElement) return\n\n    container.focus({ preventScroll: true })\n  }, [state.listboxState, state.optionsRef])\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLUListElement>) => {\n      searchDisposables.dispose()\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (state.searchQuery !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return dispatch({ type: ActionTypes.Search, value: event.key })\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseListbox })\n          if (state.activeOptionIndex !== null) {\n            let { dataRef } = state.options[state.activeOptionIndex]\n            state.propsRef.current.onChange(dataRef.current.value)\n          }\n          disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n          break\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Next })\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Previous })\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.First })\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Last })\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseListbox })\n          return d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            dispatch({ type: ActionTypes.Search, value: event.key })\n            searchDisposables.setTimeout(() => dispatch({ type: ActionTypes.ClearSearch }), 350)\n          }\n          break\n      }\n    },\n    [d, dispatch, searchDisposables, state]\n  )\n\n  let labelledby = useComputed(() => state.labelRef.current?.id ?? state.buttonRef.current?.id, [\n    state.labelRef.current,\n    state.buttonRef.current,\n  ])\n\n  let slot = useMemo<OptionsRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open }),\n    [state]\n  )\n  let propsWeControl = {\n    'aria-activedescendant':\n      state.activeOptionIndex === null ? undefined : state.options[state.activeOptionIndex]?.id,\n    'aria-labelledby': labelledby,\n    id,\n    onKeyDown: handleKeyDown,\n    role: 'listbox',\n    tabIndex: 0,\n    ref: optionsRef,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OPTIONS_TAG,\n    features: OptionsRenderFeatures,\n    visible: state.listboxState === ListboxStates.Open,\n    name: 'Listbox.Options',\n  })\n})\n\n// ---\n\nlet DEFAULT_OPTION_TAG = 'li' as const\ninterface OptionRenderPropArg {\n  active: boolean\n  selected: boolean\n  disabled: boolean\n}\ntype ListboxOptionPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-disabled'\n  | 'aria-selected'\n  | 'onPointerLeave'\n  | 'onMouseLeave'\n  | 'onPointerMove'\n  | 'onMouseMove'\n  | 'onFocus'\n\nfunction Option<\n  TTag extends ElementType = typeof DEFAULT_OPTION_TAG,\n  // TODO: One day we will be able to infer this type from the generic in Listbox itself.\n  // But today is not that day..\n  TType = Parameters<typeof Listbox>[0]['value']\n>(\n  props: Props<TTag, OptionRenderPropArg, ListboxOptionPropsWeControl | 'value'> & {\n    disabled?: boolean\n    value: TType\n  }\n) {\n  let { disabled = false, value, ...passthroughProps } = props\n  let [state, dispatch] = useListboxContext([Listbox.name, Option.name].join('.'))\n  let id = `headlessui-listbox-option-${useId()}`\n  let active =\n    state.activeOptionIndex !== null ? state.options[state.activeOptionIndex].id === id : false\n  let selected = state.propsRef.current.value === value\n\n  let bag = useRef<ListboxOptionDataRef['current']>({ disabled, value })\n\n  useIsoMorphicEffect(() => {\n    bag.current.disabled = disabled\n  }, [bag, disabled])\n  useIsoMorphicEffect(() => {\n    bag.current.value = value\n  }, [bag, value])\n  useIsoMorphicEffect(() => {\n    bag.current.textValue = document.getElementById(id)?.textContent?.toLowerCase()\n  }, [bag, id])\n\n  let select = useCallback(() => state.propsRef.current.onChange(value), [state.propsRef, value])\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterOption, id, dataRef: bag })\n    return () => dispatch({ type: ActionTypes.UnregisterOption, id })\n  }, [bag, id])\n\n  useIsoMorphicEffect(() => {\n    if (state.listboxState !== ListboxStates.Open) return\n    if (!selected) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n    document.getElementById(id)?.focus?.()\n  }, [state.listboxState])\n\n  useIsoMorphicEffect(() => {\n    if (state.listboxState !== ListboxStates.Open) return\n    if (!active) return\n    let d = disposables()\n    d.nextFrame(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    return d.dispose\n  }, [id, active, state.listboxState])\n\n  let handleClick = useCallback(\n    (event: { preventDefault: Function }) => {\n      if (disabled) return event.preventDefault()\n      select()\n      dispatch({ type: ActionTypes.CloseListbox })\n      disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n    },\n    [dispatch, state.buttonRef, disabled, select]\n  )\n\n  let handleFocus = useCallback(() => {\n    if (disabled) return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Nothing })\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n  }, [disabled, id, dispatch])\n\n  let handleMove = useCallback(() => {\n    if (disabled) return\n    if (active) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n  }, [disabled, active, id, dispatch])\n\n  let handleLeave = useCallback(() => {\n    if (disabled) return\n    if (!active) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Nothing })\n  }, [disabled, active, dispatch])\n\n  let slot = useMemo<OptionRenderPropArg>(() => ({ active, selected, disabled }), [\n    active,\n    selected,\n    disabled,\n  ])\n  let propsWeControl = {\n    id,\n    role: 'option',\n    tabIndex: -1,\n    'aria-disabled': disabled === true ? true : undefined,\n    'aria-selected': selected === true ? true : undefined,\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onPointerMove: handleMove,\n    onMouseMove: handleMove,\n    onPointerLeave: handleLeave,\n    onMouseLeave: handleLeave,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OPTION_TAG,\n    name: 'Listbox.Option',\n  })\n}\n\n// ---\n\nListbox.Button = Button\nListbox.Label = Label\nListbox.Options = Options\nListbox.Option = Option\n","export function disposables() {\n  let disposables: Function[] = []\n\n  let api = {\n    requestAnimationFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      let raf = requestAnimationFrame(...args)\n      api.add(() => cancelAnimationFrame(raf))\n    },\n\n    nextFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      api.requestAnimationFrame(() => {\n        api.requestAnimationFrame(...args)\n      })\n    },\n\n    setTimeout(...args: Parameters<typeof setTimeout>) {\n      let timer = setTimeout(...args)\n      api.add(() => clearTimeout(timer))\n    },\n\n    add(cb: () => void) {\n      disposables.push(cb)\n    },\n\n    dispose() {\n      for (let dispose of disposables.splice(0)) {\n        dispose()\n      }\n    },\n  }\n\n  return api\n}\n","import { useState, useEffect } from 'react'\n\nimport { disposables } from '../utils/disposables'\n\nexport function useDisposables() {\n  // Using useState instead of useRef so that we can use the initializer function.\n  let [d] = useState(disposables)\n  useEffect(() => () => d.dispose(), [d])\n  return d\n}\n","import { useState, useRef } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\nexport function useComputed<T>(cb: () => T, dependencies: React.DependencyList) {\n  let [value, setValue] = useState(cb)\n  let cbRef = useRef(cb)\n  useIsoMorphicEffect(() => {\n    cbRef.current = cb\n  }, [cb])\n  useIsoMorphicEffect(() => setValue(cbRef.current), [cbRef, setValue, ...dependencies])\n  return value\n}\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\nimport React, {\n  Fragment,\n  createContext,\n  createRef,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  MutableRefObject,\n  Ref,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { disposables } from '../../utils/disposables'\nimport { useDisposables } from '../../hooks/use-disposables'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { isFocusableElement, FocusableMode } from '../../utils/focus-management'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\n\nenum MenuStates {\n  Open,\n  Closed,\n}\n\ntype MenuItemDataRef = MutableRefObject<{ textValue?: string; disabled: boolean }>\n\ninterface StateDefinition {\n  menuState: MenuStates\n  buttonRef: MutableRefObject<HTMLButtonElement | null>\n  itemsRef: MutableRefObject<HTMLDivElement | null>\n  items: { id: string; dataRef: MenuItemDataRef }[]\n  searchQuery: string\n  activeItemIndex: number | null\n}\n\nenum ActionTypes {\n  OpenMenu,\n  CloseMenu,\n\n  GoToItem,\n  Search,\n  ClearSearch,\n  RegisterItem,\n  UnregisterItem,\n}\n\ntype Actions =\n  | { type: ActionTypes.CloseMenu }\n  | { type: ActionTypes.OpenMenu }\n  | { type: ActionTypes.GoToItem; focus: Focus.Specific; id: string }\n  | { type: ActionTypes.GoToItem; focus: Exclude<Focus, Focus.Specific> }\n  | { type: ActionTypes.Search; value: string }\n  | { type: ActionTypes.ClearSearch }\n  | { type: ActionTypes.RegisterItem; id: string; dataRef: MenuItemDataRef }\n  | { type: ActionTypes.UnregisterItem; id: string }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.CloseMenu](state) {\n    if (state.menuState === MenuStates.Closed) return state\n    return { ...state, activeItemIndex: null, menuState: MenuStates.Closed }\n  },\n  [ActionTypes.OpenMenu](state) {\n    if (state.menuState === MenuStates.Open) return state\n    return { ...state, menuState: MenuStates.Open }\n  },\n  [ActionTypes.GoToItem]: (state, action) => {\n    let activeItemIndex = calculateActiveIndex(action, {\n      resolveItems: () => state.items,\n      resolveActiveIndex: () => state.activeItemIndex,\n      resolveId: item => item.id,\n      resolveDisabled: item => item.dataRef.current.disabled,\n    })\n\n    if (state.searchQuery === '' && state.activeItemIndex === activeItemIndex) return state\n    return { ...state, searchQuery: '', activeItemIndex }\n  },\n  [ActionTypes.Search]: (state, action) => {\n    let searchQuery = state.searchQuery + action.value.toLowerCase()\n    let match = state.items.findIndex(\n      item =>\n        item.dataRef.current.textValue?.startsWith(searchQuery) && !item.dataRef.current.disabled\n    )\n\n    if (match === -1 || match === state.activeItemIndex) return { ...state, searchQuery }\n    return { ...state, searchQuery, activeItemIndex: match }\n  },\n  [ActionTypes.ClearSearch](state) {\n    if (state.searchQuery === '') return state\n    return { ...state, searchQuery: '' }\n  },\n  [ActionTypes.RegisterItem]: (state, action) => ({\n    ...state,\n    items: [...state.items, { id: action.id, dataRef: action.dataRef }],\n  }),\n  [ActionTypes.UnregisterItem]: (state, action) => {\n    let nextItems = state.items.slice()\n    let currentActiveItem = state.activeItemIndex !== null ? nextItems[state.activeItemIndex] : null\n\n    let idx = nextItems.findIndex(a => a.id === action.id)\n\n    if (idx !== -1) nextItems.splice(idx, 1)\n\n    return {\n      ...state,\n      items: nextItems,\n      activeItemIndex: (() => {\n        if (idx === state.activeItemIndex) return null\n        if (currentActiveItem === null) return null\n\n        // If we removed the item before the actual active index, then it would be out of sync. To\n        // fix this, we will find the correct (new) index position.\n        return nextItems.indexOf(currentActiveItem)\n      })(),\n    }\n  },\n}\n\nlet MenuContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nMenuContext.displayName = 'MenuContext'\n\nfunction useMenuContext(component: string) {\n  let context = useContext(MenuContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Menu.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useMenuContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_MENU_TAG = Fragment\ninterface MenuRenderPropArg {\n  open: boolean\n}\n\nexport function Menu<TTag extends ElementType = typeof DEFAULT_MENU_TAG>(\n  props: Props<TTag, MenuRenderPropArg>\n) {\n  let reducerBag = useReducer(stateReducer, {\n    menuState: MenuStates.Closed,\n    buttonRef: createRef(),\n    itemsRef: createRef(),\n    items: [],\n    searchQuery: '',\n    activeItemIndex: null,\n  } as StateDefinition)\n  let [{ menuState, itemsRef, buttonRef }, dispatch] = reducerBag\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (menuState !== MenuStates.Open) return\n\n    if (buttonRef.current?.contains(target)) return\n    if (itemsRef.current?.contains(target)) return\n\n    dispatch({ type: ActionTypes.CloseMenu })\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      event.preventDefault()\n      buttonRef.current?.focus()\n    }\n  })\n\n  let slot = useMemo<MenuRenderPropArg>(() => ({ open: menuState === MenuStates.Open }), [\n    menuState,\n  ])\n\n  return (\n    <MenuContext.Provider value={reducerBag}>\n      {render({ props, slot, defaultTag: DEFAULT_MENU_TAG, name: 'Menu' })}\n    </MenuContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-haspopup'\n  | 'aria-controls'\n  | 'aria-expanded'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = useMenuContext([Menu.name, Button.name].join('.'))\n  let buttonRef = useSyncRefs(state.buttonRef, ref)\n\n  let id = `headlessui-menu-button-${useId()}`\n  let d = useDisposables()\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.OpenMenu })\n          d.nextFrame(() => dispatch({ type: ActionTypes.GoToItem, focus: Focus.First }))\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.OpenMenu })\n          d.nextFrame(() => dispatch({ type: ActionTypes.GoToItem, focus: Focus.Last }))\n          break\n      }\n    },\n    [dispatch, d]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      if (props.disabled) return\n      if (state.menuState === MenuStates.Open) {\n        dispatch({ type: ActionTypes.CloseMenu })\n        d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        event.stopPropagation()\n        dispatch({ type: ActionTypes.OpenMenu })\n      }\n    },\n    [dispatch, d, state, props.disabled]\n  )\n\n  let slot = useMemo<ButtonRenderPropArg>(() => ({ open: state.menuState === MenuStates.Open }), [\n    state,\n  ])\n  let passthroughProps = props\n  let propsWeControl = {\n    ref: buttonRef,\n    id,\n    type: 'button',\n    'aria-haspopup': true,\n    'aria-controls': state.itemsRef.current?.id,\n    'aria-expanded': state.menuState === MenuStates.Open ? true : undefined,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Menu.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_ITEMS_TAG = 'div' as const\ninterface ItemsRenderPropArg {\n  open: boolean\n}\ntype ItemsPropsWeControl =\n  | 'aria-activedescendant'\n  | 'aria-labelledby'\n  | 'id'\n  | 'onKeyDown'\n  | 'role'\n  | 'tabIndex'\n\nlet ItemsRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Items = forwardRefWithAs(function Items<TTag extends ElementType = typeof DEFAULT_ITEMS_TAG>(\n  props: Props<TTag, ItemsRenderPropArg, ItemsPropsWeControl> &\n    PropsForFeatures<typeof ItemsRenderFeatures>,\n  ref: Ref<HTMLDivElement>\n) {\n  let [state, dispatch] = useMenuContext([Menu.name, Items.name].join('.'))\n  let itemsRef = useSyncRefs(state.itemsRef, ref)\n\n  let id = `headlessui-menu-items-${useId()}`\n  let searchDisposables = useDisposables()\n\n  useEffect(() => {\n    let container = state.itemsRef.current\n    if (!container) return\n    if (state.menuState !== MenuStates.Open) return\n    if (container === document.activeElement) return\n\n    container.focus({ preventScroll: true })\n  }, [state.menuState, state.itemsRef])\n\n  useTreeWalker({\n    container: state.itemsRef.current,\n    enabled: state.menuState === MenuStates.Open,\n    accept(node) {\n      if (node.getAttribute('role') === 'menuitem') return NodeFilter.FILTER_REJECT\n      if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n      return NodeFilter.FILTER_ACCEPT\n    },\n    walk(node) {\n      node.setAttribute('role', 'none')\n    },\n  })\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLDivElement>) => {\n      searchDisposables.dispose()\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (state.searchQuery !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return dispatch({ type: ActionTypes.Search, value: event.key })\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseMenu })\n          if (state.activeItemIndex !== null) {\n            let { id } = state.items[state.activeItemIndex]\n            document.getElementById(id)?.click()\n          }\n          disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n          break\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Next })\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Previous })\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.First })\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Last })\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseMenu })\n          disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            dispatch({ type: ActionTypes.Search, value: event.key })\n            searchDisposables.setTimeout(() => dispatch({ type: ActionTypes.ClearSearch }), 350)\n          }\n          break\n      }\n    },\n    [dispatch, searchDisposables, state]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let slot = useMemo<ItemsRenderPropArg>(() => ({ open: state.menuState === MenuStates.Open }), [\n    state,\n  ])\n  let propsWeControl = {\n    'aria-activedescendant':\n      state.activeItemIndex === null ? undefined : state.items[state.activeItemIndex]?.id,\n    'aria-labelledby': state.buttonRef.current?.id,\n    id,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    role: 'menu',\n    tabIndex: 0,\n    ref: itemsRef,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_ITEMS_TAG,\n    features: ItemsRenderFeatures,\n    visible: state.menuState === MenuStates.Open,\n    name: 'Menu.Items',\n  })\n})\n\n// ---\n\nlet DEFAULT_ITEM_TAG = Fragment\ninterface ItemRenderPropArg {\n  active: boolean\n  disabled: boolean\n}\ntype MenuItemPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-disabled'\n  | 'onPointerLeave'\n  | 'onPointerMove'\n  | 'onMouseLeave'\n  | 'onMouseMove'\n  | 'onFocus'\n\nfunction Item<TTag extends ElementType = typeof DEFAULT_ITEM_TAG>(\n  props: Props<TTag, ItemRenderPropArg, MenuItemPropsWeControl> & {\n    disabled?: boolean\n    onClick?: (event: { preventDefault: Function }) => void\n  }\n) {\n  let { disabled = false, onClick, ...passthroughProps } = props\n  let [state, dispatch] = useMenuContext([Menu.name, Item.name].join('.'))\n  let id = `headlessui-menu-item-${useId()}`\n  let active = state.activeItemIndex !== null ? state.items[state.activeItemIndex].id === id : false\n\n  useIsoMorphicEffect(() => {\n    if (state.menuState !== MenuStates.Open) return\n    if (!active) return\n    let d = disposables()\n    d.nextFrame(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    return d.dispose\n  }, [id, active, state.menuState])\n\n  let bag = useRef<MenuItemDataRef['current']>({ disabled })\n\n  useIsoMorphicEffect(() => {\n    bag.current.disabled = disabled\n  }, [bag, disabled])\n\n  useIsoMorphicEffect(() => {\n    bag.current.textValue = document.getElementById(id)?.textContent?.toLowerCase()\n  }, [bag, id])\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterItem, id, dataRef: bag })\n    return () => dispatch({ type: ActionTypes.UnregisterItem, id })\n  }, [bag, id])\n\n  let handleClick = useCallback(\n    (event: MouseEvent) => {\n      if (disabled) return event.preventDefault()\n      dispatch({ type: ActionTypes.CloseMenu })\n      disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n      if (onClick) return onClick(event)\n    },\n    [dispatch, state.buttonRef, disabled, onClick]\n  )\n\n  let handleFocus = useCallback(() => {\n    if (disabled) return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Nothing })\n    dispatch({ type: ActionTypes.GoToItem, focus: Focus.Specific, id })\n  }, [disabled, id, dispatch])\n\n  let handleMove = useCallback(() => {\n    if (disabled) return\n    if (active) return\n    dispatch({ type: ActionTypes.GoToItem, focus: Focus.Specific, id })\n  }, [disabled, active, id, dispatch])\n\n  let handleLeave = useCallback(() => {\n    if (disabled) return\n    if (!active) return\n    dispatch({ type: ActionTypes.GoToItem, focus: Focus.Nothing })\n  }, [disabled, active, dispatch])\n\n  let slot = useMemo<ItemRenderPropArg>(() => ({ active, disabled }), [active, disabled])\n  let propsWeControl = {\n    id,\n    role: 'menuitem',\n    tabIndex: -1,\n    'aria-disabled': disabled === true ? true : undefined,\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onPointerMove: handleMove,\n    onMouseMove: handleMove,\n    onPointerLeave: handleLeave,\n    onMouseLeave: handleLeave,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_ITEM_TAG,\n    name: 'Menu.Item',\n  })\n}\n\n// ---\n\nMenu.Button = Button\nMenu.Items = Items\nMenu.Item = Item\n","import { useRef, useEffect } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\ntype AcceptNode = (\n  node: HTMLElement\n) =>\n  | typeof NodeFilter.FILTER_ACCEPT\n  | typeof NodeFilter.FILTER_SKIP\n  | typeof NodeFilter.FILTER_REJECT\n\nexport function useTreeWalker({\n  container,\n  accept,\n  walk,\n  enabled = true,\n}: {\n  container: HTMLElement | null\n  accept: AcceptNode\n  walk(node: HTMLElement): void\n  enabled?: boolean\n}) {\n  let acceptRef = useRef(accept)\n  let walkRef = useRef(walk)\n\n  useEffect(() => {\n    acceptRef.current = accept\n    walkRef.current = walk\n  }, [accept, walk])\n\n  useIsoMorphicEffect(() => {\n    if (!container) return\n    if (!enabled) return\n\n    let accept = acceptRef.current\n    let walk = walkRef.current\n\n    let acceptNode = Object.assign((node: HTMLElement) => accept(node), { acceptNode: accept })\n    let walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, acceptNode, false)\n\n    while (walker.nextNode()) walk(walker.currentNode as HTMLElement)\n  }, [container, enabled, acceptRef, walkRef])\n}\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n\n  // Types\n  ContextType,\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  Ref,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport {\n  getFocusableElements,\n  Focus,\n  focusIn,\n  FocusResult,\n  isFocusableElement,\n  FocusableMode,\n} from '../../utils/focus-management'\nimport { useWindowEvent } from '../../hooks/use-window-event'\n\nenum PopoverStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  popoverState: PopoverStates\n\n  button: HTMLElement | null\n  buttonId: string\n  panel: HTMLElement | null\n  panelId: string\n}\n\nenum ActionTypes {\n  TogglePopover,\n  ClosePopover,\n\n  SetButton,\n  SetButtonId,\n  SetPanel,\n  SetPanelId,\n}\n\ntype Actions =\n  | { type: ActionTypes.TogglePopover }\n  | { type: ActionTypes.ClosePopover }\n  | { type: ActionTypes.SetButton; button: HTMLElement | null }\n  | { type: ActionTypes.SetButtonId; buttonId: string }\n  | { type: ActionTypes.SetPanel; panel: HTMLElement | null }\n  | { type: ActionTypes.SetPanelId; panelId: string }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.TogglePopover]: state => ({\n    ...state,\n    popoverState: match(state.popoverState, {\n      [PopoverStates.Open]: PopoverStates.Closed,\n      [PopoverStates.Closed]: PopoverStates.Open,\n    }),\n  }),\n  [ActionTypes.ClosePopover](state) {\n    if (state.popoverState === PopoverStates.Closed) return state\n    return { ...state, popoverState: PopoverStates.Closed }\n  },\n  [ActionTypes.SetButton](state, action) {\n    if (state.button === action.button) return state\n    return { ...state, button: action.button }\n  },\n  [ActionTypes.SetButtonId](state, action) {\n    if (state.buttonId === action.buttonId) return state\n    return { ...state, buttonId: action.buttonId }\n  },\n  [ActionTypes.SetPanel](state, action) {\n    if (state.panel === action.panel) return state\n    return { ...state, panel: action.panel }\n  },\n  [ActionTypes.SetPanelId](state, action) {\n    if (state.panelId === action.panelId) return state\n    return { ...state, panelId: action.panelId }\n  },\n}\n\nlet PopoverContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nPopoverContext.displayName = 'PopoverContext'\n\nfunction usePopoverContext(component: string) {\n  let context = useContext(PopoverContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Popover.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, usePopoverContext)\n    throw err\n  }\n  return context\n}\n\nlet PopoverGroupContext = createContext<{\n  registerPopover(registerbag: PopoverRegisterBag): void\n  unregisterPopover(registerbag: PopoverRegisterBag): void\n  isFocusWithinPopoverGroup(): boolean\n  closeOthers(buttonId: string): void\n} | null>(null)\nPopoverGroupContext.displayName = 'PopoverGroupContext'\n\nfunction usePopoverGroupContext() {\n  return useContext(PopoverGroupContext)\n}\n\nlet PopoverPanelContext = createContext<string | null>(null)\nPopoverPanelContext.displayName = 'PopoverPanelContext'\n\nfunction usePopoverPanelContext() {\n  return useContext(PopoverPanelContext)\n}\n\ninterface PopoverRegisterBag {\n  buttonId: string\n  panelId: string\n  close(): void\n}\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_POPOVER_TAG = 'div' as const\ninterface PopoverRenderPropArg {\n  open: boolean\n}\n\nexport function Popover<TTag extends ElementType = typeof DEFAULT_POPOVER_TAG>(\n  props: Props<TTag, PopoverRenderPropArg>\n) {\n  let buttonId = `headlessui-popover-button-${useId()}`\n  let panelId = `headlessui-popover-panel-${useId()}`\n\n  let reducerBag = useReducer(stateReducer, {\n    popoverState: PopoverStates.Closed,\n    button: null,\n    buttonId,\n    panel: null,\n    panelId,\n  } as StateDefinition)\n  let [{ popoverState, button, panel }, dispatch] = reducerBag\n\n  useEffect(() => dispatch({ type: ActionTypes.SetButtonId, buttonId }), [buttonId, dispatch])\n  useEffect(() => dispatch({ type: ActionTypes.SetPanelId, panelId }), [panelId, dispatch])\n\n  let registerBag = useMemo(\n    () => ({ buttonId, panelId, close: () => dispatch({ type: ActionTypes.ClosePopover }) }),\n    [buttonId, panelId, dispatch]\n  )\n\n  let groupContext = usePopoverGroupContext()\n  let registerPopover = groupContext?.registerPopover\n  let isFocusWithinPopoverGroup = useCallback(() => {\n    return (\n      groupContext?.isFocusWithinPopoverGroup() ??\n      (button?.contains(document.activeElement) || panel?.contains(document.activeElement))\n    )\n  }, [groupContext, button, panel])\n\n  useEffect(() => registerPopover?.(registerBag), [registerPopover, registerBag])\n\n  // Handle focus out\n  useWindowEvent(\n    'focus',\n    () => {\n      if (popoverState !== PopoverStates.Open) return\n      if (isFocusWithinPopoverGroup()) return\n      if (!button) return\n      if (!panel) return\n\n      dispatch({ type: ActionTypes.ClosePopover })\n    },\n    true\n  )\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (popoverState !== PopoverStates.Open) return\n\n    if (button?.contains(target)) return\n    if (panel?.contains(target)) return\n\n    dispatch({ type: ActionTypes.ClosePopover })\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      event.preventDefault()\n      button?.focus()\n    }\n  })\n\n  let slot = useMemo<PopoverRenderPropArg>(() => ({ open: popoverState === PopoverStates.Open }), [\n    popoverState,\n  ])\n\n  return (\n    <PopoverContext.Provider value={reducerBag}>\n      {render({\n        props,\n        slot,\n        defaultTag: DEFAULT_POPOVER_TAG,\n        name: 'Popover',\n      })}\n    </PopoverContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-expanded'\n  | 'aria-controls'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = usePopoverContext([Popover.name, Button.name].join('.'))\n  let internalButtonRef = useRef<HTMLButtonElement | null>(null)\n\n  let groupContext = usePopoverGroupContext()\n  let closeOthers = groupContext?.closeOthers\n\n  let panelContext = usePopoverPanelContext()\n  let isWithinPanel = panelContext === null ? false : panelContext === state.panelId\n\n  let buttonRef = useSyncRefs(\n    internalButtonRef,\n    ref,\n    isWithinPanel ? null : button => dispatch({ type: ActionTypes.SetButton, button })\n  )\n\n  // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n  let activeElementRef = useRef<Element | null>(null)\n  let previousActiveElementRef = useRef<Element | null>(\n    typeof window === 'undefined' ? null : document.activeElement\n  )\n  useWindowEvent(\n    'focus',\n    () => {\n      previousActiveElementRef.current = activeElementRef.current\n      activeElementRef.current = document.activeElement\n    },\n    true\n  )\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      if (isWithinPanel) {\n        if (state.popoverState === PopoverStates.Closed) return\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault() // Prevent triggering a *click* event\n            event.stopPropagation()\n            dispatch({ type: ActionTypes.ClosePopover })\n            state.button?.focus() // Re-focus the original opening Button\n            break\n        }\n      } else {\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault() // Prevent triggering a *click* event\n            event.stopPropagation()\n            if (state.popoverState === PopoverStates.Closed) closeOthers?.(state.buttonId)\n            dispatch({ type: ActionTypes.TogglePopover })\n            break\n\n          case Keys.Escape:\n            if (state.popoverState !== PopoverStates.Open) return closeOthers?.(state.buttonId)\n            if (!internalButtonRef.current) return\n            if (!internalButtonRef.current.contains(document.activeElement)) return\n            dispatch({ type: ActionTypes.ClosePopover })\n            break\n\n          case Keys.Tab:\n            if (state.popoverState !== PopoverStates.Open) return\n            if (!state.panel) return\n            if (!state.button) return\n\n            // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n            if (event.shiftKey) {\n              // Check if the last focused element exists, and check that it is not inside button or panel itself\n              if (!previousActiveElementRef.current) return\n              if (state.button?.contains(previousActiveElementRef.current)) return\n              if (state.panel.contains(previousActiveElementRef.current)) return\n\n              // Check if the last focused element is *after* the button in the DOM\n              let focusableElements = getFocusableElements()\n              let previousIdx = focusableElements.indexOf(\n                previousActiveElementRef.current as HTMLElement\n              )\n              let buttonIdx = focusableElements.indexOf(state.button)\n              if (buttonIdx > previousIdx) return\n\n              event.preventDefault()\n              event.stopPropagation()\n\n              focusIn(state.panel, Focus.Last)\n            } else {\n              event.preventDefault()\n              event.stopPropagation()\n\n              focusIn(state.panel, Focus.First)\n            }\n\n            break\n        }\n      }\n    },\n    [\n      dispatch,\n      state.popoverState,\n      state.buttonId,\n      state.button,\n      state.panel,\n      internalButtonRef,\n      closeOthers,\n      isWithinPanel,\n    ]\n  )\n\n  let handleKeyUp = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      if (isWithinPanel) return\n      if (event.key === Keys.Space) {\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n      }\n      if (state.popoverState !== PopoverStates.Open) return\n      if (!state.panel) return\n      if (!state.button) return\n\n      // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n      switch (event.key) {\n        case Keys.Tab:\n          // Check if the last focused element exists, and check that it is not inside button or panel itself\n          if (!previousActiveElementRef.current) return\n          if (state.button?.contains(previousActiveElementRef.current)) return\n          if (state.panel.contains(previousActiveElementRef.current)) return\n\n          // Check if the last focused element is *after* the button in the DOM\n          let focusableElements = getFocusableElements()\n          let previousIdx = focusableElements.indexOf(\n            previousActiveElementRef.current as HTMLElement\n          )\n          let buttonIdx = focusableElements.indexOf(state.button)\n          if (buttonIdx > previousIdx) return\n\n          event.preventDefault()\n          event.stopPropagation()\n          focusIn(state.panel, Focus.Last)\n          break\n      }\n    },\n    [state.popoverState, state.panel, state.button, isWithinPanel]\n  )\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return\n      if (props.disabled) return\n      if (isWithinPanel) {\n        dispatch({ type: ActionTypes.ClosePopover })\n        state.button?.focus() // Re-focus the original opening Button\n      } else {\n        if (state.popoverState === PopoverStates.Closed) closeOthers?.(state.buttonId)\n        state.button?.focus()\n        dispatch({ type: ActionTypes.TogglePopover })\n      }\n    },\n    [\n      dispatch,\n      state.button,\n      state.popoverState,\n      state.buttonId,\n      props.disabled,\n      closeOthers,\n      isWithinPanel,\n    ]\n  )\n\n  let slot = useMemo<ButtonRenderPropArg>(\n    () => ({ open: state.popoverState === PopoverStates.Open }),\n    [state]\n  )\n\n  let passthroughProps = props\n  let propsWeControl = isWithinPanel\n    ? {\n        type: 'button',\n        onKeyDown: handleKeyDown,\n        onClick: handleClick,\n      }\n    : {\n        ref: buttonRef,\n        id: state.buttonId,\n        type: 'button',\n        'aria-expanded': state.popoverState === PopoverStates.Open ? true : undefined,\n        'aria-controls': state.panel ? state.panelId : undefined,\n        onKeyDown: handleKeyDown,\n        onKeyUp: handleKeyUp,\n        onClick: handleClick,\n      }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Popover.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_OVERLAY_TAG = 'div' as const\ninterface OverlayRenderPropArg {\n  open: boolean\n}\ntype OverlayPropsWeControl = 'id' | 'aria-hidden' | 'onClick'\n\nlet OverlayRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Overlay = forwardRefWithAs(function Overlay<\n  TTag extends ElementType = typeof DEFAULT_OVERLAY_TAG\n>(\n  props: Props<TTag, OverlayRenderPropArg, OverlayPropsWeControl> &\n    PropsForFeatures<typeof OverlayRenderFeatures>,\n  ref: Ref<HTMLDivElement>\n) {\n  let [{ popoverState }, dispatch] = usePopoverContext([Popover.name, Overlay.name].join('.'))\n  let overlayRef = useSyncRefs(ref)\n\n  let id = `headlessui-popover-overlay-${useId()}`\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      dispatch({ type: ActionTypes.ClosePopover })\n    },\n    [dispatch]\n  )\n\n  let slot = useMemo<OverlayRenderPropArg>(() => ({ open: popoverState === PopoverStates.Open }), [\n    popoverState,\n  ])\n  let propsWeControl = {\n    ref: overlayRef,\n    id,\n    'aria-hidden': true,\n    onClick: handleClick,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OVERLAY_TAG,\n    features: OverlayRenderFeatures,\n    visible: popoverState === PopoverStates.Open,\n    name: 'Popover.Overlay',\n  })\n})\n\n// ---\n\nlet DEFAULT_PANEL_TAG = 'div' as const\ninterface PanelRenderPropArg {\n  open: boolean\n}\ntype PanelPropsWeControl = 'id' | 'onKeyDown'\n\nlet PanelRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Panel = forwardRefWithAs(function Panel<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(\n  props: Props<TTag, PanelRenderPropArg, PanelPropsWeControl> &\n    PropsForFeatures<typeof PanelRenderFeatures> & { focus?: boolean },\n  ref: Ref<HTMLDivElement>\n) {\n  let { focus = false, ...passthroughProps } = props\n\n  let [state, dispatch] = usePopoverContext([Popover.name, Panel.name].join('.'))\n  let internalPanelRef = useRef<HTMLDivElement | null>(null)\n  let panelRef = useSyncRefs(internalPanelRef, ref, panel => {\n    dispatch({ type: ActionTypes.SetPanel, panel })\n  })\n\n  let handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      switch (event.key) {\n        case Keys.Escape:\n          if (state.popoverState !== PopoverStates.Open) return\n          if (!internalPanelRef.current) return\n          if (!internalPanelRef.current.contains(document.activeElement)) return\n          event.preventDefault()\n          dispatch({ type: ActionTypes.ClosePopover })\n          state.button?.focus()\n          break\n      }\n    },\n    [state, internalPanelRef, dispatch]\n  )\n\n  // Unlink on \"unmount\" myself\n  useEffect(() => () => dispatch({ type: ActionTypes.SetPanel, panel: null }), [dispatch])\n\n  // Unlink on \"unmount\" children\n  useEffect(() => {\n    if (state.popoverState === PopoverStates.Closed && (props.unmount ?? true)) {\n      dispatch({ type: ActionTypes.SetPanel, panel: null })\n    }\n  }, [state.popoverState, props.unmount, dispatch])\n\n  // Move focus within panel\n  useEffect(() => {\n    if (!focus) return\n    if (state.popoverState !== PopoverStates.Open) return\n    if (!internalPanelRef.current) return\n\n    let activeElement = document.activeElement as HTMLElement\n    if (internalPanelRef.current.contains(activeElement)) return // Already focused within Dialog\n\n    focusIn(internalPanelRef.current, Focus.First)\n  }, [focus, internalPanelRef, state.popoverState])\n\n  // Handle Tab / Shift+Tab focus positioning\n  useWindowEvent('keydown', event => {\n    if (state.popoverState !== PopoverStates.Open) return\n    if (!internalPanelRef.current) return\n    if (event.key !== Keys.Tab) return\n    if (!document.activeElement) return\n    if (!internalPanelRef.current) return\n    if (!internalPanelRef.current.contains(document.activeElement)) return\n\n    // We will take-over the default tab behaviour so that we have a bit\n    // control over what is focused next. It will behave exactly the same,\n    // but it will also \"fix\" some issues based on whether you are using a\n    // Portal or not.\n    event.preventDefault()\n\n    let result = focusIn(internalPanelRef.current, event.shiftKey ? Focus.Previous : Focus.Next)\n\n    if (result === FocusResult.Underflow) {\n      return state.button?.focus()\n    } else if (result === FocusResult.Overflow) {\n      if (!state.button) return\n\n      let elements = getFocusableElements()\n      let buttonIdx = elements.indexOf(state.button)\n\n      let nextElements = elements\n        .splice(buttonIdx + 1) // Elements after button\n        .filter(element => !internalPanelRef.current?.contains(element)) // Ignore items in panel\n\n      // Try to focus the next element, however it could fail if we are in a\n      // Portal that happens to be the very last one in the DOM. In that\n      // case we would Error (because nothing after the button is\n      // focusable). Therefore we will try and focus the very first item in\n      // the document.body.\n      if (focusIn(nextElements, Focus.First) === FocusResult.Error) {\n        focusIn(document.body, Focus.First)\n      }\n    }\n  })\n\n  // Handle focus out when we are in special \"focus\" mode\n  useWindowEvent(\n    'focus',\n    () => {\n      if (!focus) return\n      if (state.popoverState !== PopoverStates.Open) return\n      if (!internalPanelRef.current) return\n\n      if (internalPanelRef.current?.contains(document.activeElement as HTMLElement)) return\n      dispatch({ type: ActionTypes.ClosePopover })\n    },\n    true\n  )\n\n  let slot = useMemo<PanelRenderPropArg>(\n    () => ({ open: state.popoverState === PopoverStates.Open }),\n    [state]\n  )\n  let propsWeControl = {\n    ref: panelRef,\n    id: state.panelId,\n    onKeyDown: handleKeyDown,\n  }\n\n  return (\n    <PopoverPanelContext.Provider value={state.panelId}>\n      {render({\n        props: { ...passthroughProps, ...propsWeControl },\n        slot,\n        defaultTag: DEFAULT_PANEL_TAG,\n        features: PanelRenderFeatures,\n        visible: state.popoverState === PopoverStates.Open,\n        name: 'Popover.Panel',\n      })}\n    </PopoverPanelContext.Provider>\n  )\n})\n\n// ---\n\nlet DEFAULT_GROUP_TAG = 'div' as const\ninterface GroupRenderPropArg {}\ntype GroupPropsWeControl = 'id'\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(\n  props: Props<TTag, GroupRenderPropArg, GroupPropsWeControl>\n) {\n  let groupRef = useRef<HTMLElement | null>(null)\n  let [popovers, setPopovers] = useState<PopoverRegisterBag[]>([])\n\n  let unregisterPopover = useCallback(\n    (registerbag: PopoverRegisterBag) => {\n      setPopovers(existing => {\n        let idx = existing.indexOf(registerbag)\n        if (idx !== -1) {\n          let clone = existing.slice()\n          clone.splice(idx, 1)\n          return clone\n        }\n        return existing\n      })\n    },\n    [setPopovers]\n  )\n\n  let registerPopover = useCallback(\n    (registerbag: PopoverRegisterBag) => {\n      setPopovers(existing => [...existing, registerbag])\n      return () => unregisterPopover(registerbag)\n    },\n    [setPopovers, unregisterPopover]\n  )\n\n  let isFocusWithinPopoverGroup = useCallback(() => {\n    let element = document.activeElement as HTMLElement\n\n    if (groupRef.current?.contains(element)) return true\n\n    // Check if the focus is in one of the button or panel elements. This is important in case you are rendering inside a Portal.\n    return popovers.some(bag => {\n      return (\n        document.getElementById(bag.buttonId)?.contains(element) ||\n        document.getElementById(bag.panelId)?.contains(element)\n      )\n    })\n  }, [groupRef, popovers])\n\n  let closeOthers = useCallback(\n    (buttonId: string) => {\n      for (let popover of popovers) {\n        if (popover.buttonId !== buttonId) popover.close()\n      }\n    },\n    [popovers]\n  )\n\n  let contextBag = useMemo<ContextType<typeof PopoverGroupContext>>(\n    () => ({\n      registerPopover: registerPopover,\n      unregisterPopover: unregisterPopover,\n      isFocusWithinPopoverGroup,\n      closeOthers,\n    }),\n    [registerPopover, unregisterPopover, isFocusWithinPopoverGroup, closeOthers]\n  )\n\n  let slot = useMemo<GroupRenderPropArg>(() => ({}), [])\n  let propsWeControl = { ref: groupRef }\n  let passthroughProps = props\n\n  return (\n    <PopoverGroupContext.Provider value={contextBag}>\n      {render({\n        props: { ...passthroughProps, ...propsWeControl },\n        slot,\n        defaultTag: DEFAULT_GROUP_TAG,\n        name: 'Popover.Group',\n      })}\n    </PopoverGroupContext.Provider>\n  )\n}\n\n// ---\n\nPopover.Button = Button\nPopover.Overlay = Overlay\nPopover.Panel = Panel\nPopover.Group = Group\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  ReactNode,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\n// ---\n\ninterface SharedData {\n  slot?: {}\n  name?: string\n  props?: {}\n}\n\nlet LabelContext = createContext<({ register(value: string): () => void } & SharedData) | null>(\n  null\n)\n\nfunction useLabelContext() {\n  let context = useContext(LabelContext)\n  if (context === null) {\n    let err = new Error('You used a <Label /> component, but it is not inside a relevant parent.')\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useLabelContext)\n    throw err\n  }\n  return context\n}\n\ninterface LabelProviderProps extends SharedData {\n  children: ReactNode\n}\n\nexport function useLabels(): [string | undefined, (props: LabelProviderProps) => JSX.Element] {\n  let [labelIds, setLabelIds] = useState<string[]>([])\n\n  return [\n    // The actual id's as string or undefined.\n    labelIds.length > 0 ? labelIds.join(' ') : undefined,\n\n    // The provider component\n    useMemo(() => {\n      return function LabelProvider(props: LabelProviderProps) {\n        let register = useCallback((value: string) => {\n          setLabelIds(existing => [...existing, value])\n\n          return () =>\n            setLabelIds(existing => {\n              let clone = existing.slice()\n              let idx = clone.indexOf(value)\n              if (idx !== -1) clone.splice(idx, 1)\n              return clone\n            })\n        }, [])\n\n        let contextBag = useMemo(\n          () => ({ register, slot: props.slot, name: props.name, props: props.props }),\n          [register, props.slot, props.name, props.props]\n        )\n\n        return <LabelContext.Provider value={contextBag}>{props.children}</LabelContext.Provider>\n      }\n    }, [setLabelIds]),\n  ]\n}\n\n// ---\n\nlet DEFAULT_LABEL_TAG = 'label' as const\ninterface LabelRenderPropArg {}\ntype LabelPropsWeControl = 'id'\n\nexport function Label<TTag extends ElementType = typeof DEFAULT_LABEL_TAG>(\n  props: Props<TTag, LabelRenderPropArg, LabelPropsWeControl> & {\n    passive?: boolean\n  }\n) {\n  let { passive = false, ...passThroughProps } = props\n  let context = useLabelContext()\n  let id = `headlessui-label-${useId()}`\n\n  useIsoMorphicEffect(() => context.register(id), [id, context.register])\n\n  let propsWeControl = { ...context.props, id }\n\n  let allProps = { ...passThroughProps, ...propsWeControl }\n  // @ts-expect-error props are dynamic via context, some components will\n  //                  provide an onClick then we can delete it.\n  if (passive) delete allProps['onClick']\n\n  return render({\n    props: allProps,\n    slot: context.slot || {},\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: context.name || 'Label',\n  })\n}\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n  KeyboardEvent as ReactKeyboardEvent,\n  ContextType,\n} from 'react'\n\nimport { Props, Expand } from '../../types'\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { Keys } from '../../components/keyboard'\nimport { focusIn, Focus, FocusResult } from '../../utils/focus-management'\nimport { useFlags } from '../../hooks/use-flags'\nimport { Label, useLabels } from '../../components/label/label'\nimport { Description, useDescriptions } from '../../components/description/description'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\n\ninterface Option {\n  id: string\n  element: MutableRefObject<HTMLElement | null>\n  propsRef: MutableRefObject<{ value: unknown; disabled: boolean }>\n}\n\ninterface StateDefinition {\n  options: Option[]\n}\n\nenum ActionTypes {\n  RegisterOption,\n  UnregisterOption,\n}\n\ntype Actions =\n  | Expand<{ type: ActionTypes.RegisterOption } & Option>\n  | { type: ActionTypes.UnregisterOption; id: Option['id'] }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.RegisterOption](state, action) {\n    return {\n      ...state,\n      options: [\n        ...state.options,\n        { id: action.id, element: action.element, propsRef: action.propsRef },\n      ],\n    }\n  },\n  [ActionTypes.UnregisterOption](state, action) {\n    let options = state.options.slice()\n    let idx = state.options.findIndex(radio => radio.id === action.id)\n    if (idx === -1) return state\n    options.splice(idx, 1)\n    return { ...state, options }\n  },\n}\n\nlet RadioGroupContext = createContext<{\n  registerOption(option: Option): () => void\n  change(value: unknown): boolean\n  value: unknown\n  firstOption?: Option\n  containsCheckedOption: boolean\n  disabled: boolean\n} | null>(null)\nRadioGroupContext.displayName = 'RadioGroupContext'\n\nfunction useRadioGroupContext(component: string) {\n  let context = useContext(RadioGroupContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${RadioGroup.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useRadioGroupContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_RADIO_GROUP_TAG = 'div' as const\ninterface RadioGroupRenderPropArg {}\ntype RadioGroupPropsWeControl = 'role' | 'aria-labelledby' | 'aria-describedby' | 'id'\n\nexport function RadioGroup<\n  TTag extends ElementType = typeof DEFAULT_RADIO_GROUP_TAG,\n  TType = string\n>(\n  props: Props<\n    TTag,\n    RadioGroupRenderPropArg,\n    RadioGroupPropsWeControl | 'value' | 'onChange' | 'disabled'\n  > & {\n    value: TType\n    onChange(value: TType): void\n    disabled?: boolean\n  }\n) {\n  let { value, onChange, disabled = false, ...passThroughProps } = props\n  let [{ options }, dispatch] = useReducer(stateReducer, {\n    options: [],\n  } as StateDefinition)\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n  let id = `headlessui-radiogroup-${useId()}`\n  let radioGroupRef = useRef<HTMLElement | null>(null)\n\n  let firstOption = useMemo(\n    () =>\n      options.find(option => {\n        if (option.propsRef.current.disabled) return false\n        return true\n      }),\n    [options]\n  )\n  let containsCheckedOption = useMemo(\n    () => options.some(option => option.propsRef.current.value === value),\n    [options, value]\n  )\n\n  let triggerChange = useCallback(\n    nextValue => {\n      if (disabled) return false\n      if (nextValue === value) return false\n      let nextOption = options.find(option => option.propsRef.current.value === nextValue)?.propsRef\n        .current\n      if (nextOption?.disabled) return false\n\n      onChange(nextValue)\n      return true\n    },\n    [onChange, value, disabled, options]\n  )\n\n  useTreeWalker({\n    container: radioGroupRef.current,\n    accept(node) {\n      if (node.getAttribute('role') === 'radio') return NodeFilter.FILTER_REJECT\n      if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n      return NodeFilter.FILTER_ACCEPT\n    },\n    walk(node) {\n      node.setAttribute('role', 'none')\n    },\n  })\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      let container = radioGroupRef.current\n      if (!container) return\n\n      let all = options\n        .filter(option => option.propsRef.current.disabled === false)\n        .map(radio => radio.element.current) as HTMLElement[]\n\n      switch (event.key) {\n        case Keys.ArrowLeft:\n        case Keys.ArrowUp:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Previous | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.find(\n                option => option.element.current === document.activeElement\n              )\n              if (activeOption) triggerChange(activeOption.propsRef.current.value)\n            }\n          }\n          break\n\n        case Keys.ArrowRight:\n        case Keys.ArrowDown:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Next | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.find(\n                option => option.element.current === document.activeElement\n              )\n              if (activeOption) triggerChange(activeOption.propsRef.current.value)\n            }\n          }\n          break\n\n        case Keys.Space:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let activeOption = options.find(\n              option => option.element.current === document.activeElement\n            )\n            if (activeOption) triggerChange(activeOption.propsRef.current.value)\n          }\n          break\n      }\n    },\n    [radioGroupRef, options, triggerChange]\n  )\n\n  let registerOption = useCallback(\n    (option: Option) => {\n      dispatch({ type: ActionTypes.RegisterOption, ...option })\n      return () => dispatch({ type: ActionTypes.UnregisterOption, id: option.id })\n    },\n    [dispatch]\n  )\n\n  let api = useMemo<ContextType<typeof RadioGroupContext>>(\n    () => ({\n      registerOption,\n      firstOption,\n      containsCheckedOption,\n      change: triggerChange,\n      disabled,\n      value,\n    }),\n    [registerOption, firstOption, containsCheckedOption, triggerChange, disabled, value]\n  )\n\n  let propsWeControl = {\n    ref: radioGroupRef,\n    id,\n    role: 'radiogroup',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    onKeyDown: handleKeyDown,\n  }\n\n  return (\n    <DescriptionProvider name=\"RadioGroup.Description\">\n      <LabelProvider name=\"RadioGroup.Label\">\n        <RadioGroupContext.Provider value={api}>\n          {render({\n            props: { ...passThroughProps, ...propsWeControl },\n            defaultTag: DEFAULT_RADIO_GROUP_TAG,\n            name: 'RadioGroup',\n          })}\n        </RadioGroupContext.Provider>\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nenum OptionState {\n  Empty = 1 << 0,\n  Active = 1 << 1,\n}\n\nlet DEFAULT_OPTION_TAG = 'div' as const\ninterface OptionRenderPropArg {\n  checked: boolean\n  active: boolean\n  disabled: boolean\n}\ntype RadioPropsWeControl =\n  | 'aria-checked'\n  | 'id'\n  | 'onBlur'\n  | 'onClick'\n  | 'onFocus'\n  | 'ref'\n  | 'role'\n  | 'tabIndex'\n\nfunction Option<\n  TTag extends ElementType = typeof DEFAULT_OPTION_TAG,\n  // TODO: One day we will be able to infer this type from the generic in RadioGroup itself.\n  // But today is not that day..\n  TType = Parameters<typeof RadioGroup>[0]['value']\n>(\n  props: Props<TTag, OptionRenderPropArg, RadioPropsWeControl | 'value' | 'disabled'> & {\n    value: TType\n    disabled?: boolean\n  }\n) {\n  let optionRef = useRef<HTMLElement | null>(null)\n  let id = `headlessui-radiogroup-option-${useId()}`\n\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n  let { addFlag, removeFlag, hasFlag } = useFlags(OptionState.Empty)\n\n  let { value, disabled = false, ...passThroughProps } = props\n  let propsRef = useRef({ value, disabled })\n\n  useIsoMorphicEffect(() => {\n    propsRef.current.value = value\n  }, [value, propsRef])\n  useIsoMorphicEffect(() => {\n    propsRef.current.disabled = disabled\n  }, [disabled, propsRef])\n\n  let {\n    registerOption,\n    disabled: radioGroupDisabled,\n    change,\n    firstOption,\n    containsCheckedOption,\n    value: radioGroupValue,\n  } = useRadioGroupContext([RadioGroup.name, Option.name].join('.'))\n\n  useIsoMorphicEffect(() => registerOption({ id, element: optionRef, propsRef }), [\n    id,\n    registerOption,\n    optionRef,\n    props,\n  ])\n\n  let handleClick = useCallback(() => {\n    if (!change(value)) return\n\n    addFlag(OptionState.Active)\n    optionRef.current?.focus()\n  }, [addFlag, change, value])\n\n  let handleFocus = useCallback(() => addFlag(OptionState.Active), [addFlag])\n  let handleBlur = useCallback(() => removeFlag(OptionState.Active), [removeFlag])\n\n  let isFirstOption = firstOption?.id === id\n  let isDisabled = radioGroupDisabled || disabled\n\n  let checked = radioGroupValue === value\n  let propsWeControl = {\n    ref: optionRef,\n    id,\n    role: 'radio',\n    'aria-checked': checked ? 'true' : 'false',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    tabIndex: (() => {\n      if (isDisabled) return -1\n      if (checked) return 0\n      if (!containsCheckedOption && isFirstOption) return 0\n      return -1\n    })(),\n    onClick: isDisabled ? undefined : handleClick,\n    onFocus: isDisabled ? undefined : handleFocus,\n    onBlur: isDisabled ? undefined : handleBlur,\n  }\n  let slot = useMemo<OptionRenderPropArg>(\n    () => ({ checked, disabled: isDisabled, active: hasFlag(OptionState.Active) }),\n    [checked, isDisabled, hasFlag]\n  )\n\n  return (\n    <DescriptionProvider name=\"RadioGroup.Description\">\n      <LabelProvider name=\"RadioGroup.Label\">\n        {render({\n          props: { ...passThroughProps, ...propsWeControl },\n          slot,\n          defaultTag: DEFAULT_OPTION_TAG,\n          name: 'RadioGroup.Option',\n        })}\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nRadioGroup.Option = Option\nRadioGroup.Label = Label\nRadioGroup.Description = Description\n","import { useState, useCallback } from 'react'\n\nexport function useFlags(initialFlags = 0) {\n  let [flags, setFlags] = useState(initialFlags)\n\n  let addFlag = useCallback((flag: number) => setFlags(flags => flags | flag), [setFlags])\n  let hasFlag = useCallback((flag: number) => Boolean(flags & flag), [flags])\n  let removeFlag = useCallback((flag: number) => setFlags(flags => flags & ~flag), [setFlags])\n  let toggleFlag = useCallback((flag: number) => setFlags(flags => flags ^ flag), [setFlags])\n\n  return { addFlag, hasFlag, removeFlag, toggleFlag }\n}\n","import React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\n\ninterface StateDefinition {\n  switch: HTMLButtonElement | null\n  setSwitch(element: HTMLButtonElement): void\n  labelledby: string | undefined\n  describedby: string | undefined\n}\n\nlet GroupContext = createContext<StateDefinition | null>(null)\nGroupContext.displayName = 'GroupContext'\n\n// ---\n\nlet DEFAULT_GROUP_TAG = Fragment\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_GROUP_TAG>(props: Props<TTag>) {\n  let [switchElement, setSwitchElement] = useState<HTMLButtonElement | null>(null)\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n\n  let context = useMemo<StateDefinition>(\n    () => ({ switch: switchElement, setSwitch: setSwitchElement, labelledby, describedby }),\n    [switchElement, setSwitchElement, labelledby, describedby]\n  )\n\n  return (\n    <DescriptionProvider name=\"Switch.Description\">\n      <LabelProvider\n        name=\"Switch.Label\"\n        props={{\n          onClick() {\n            if (!switchElement) return\n            switchElement.click()\n            switchElement.focus({ preventScroll: true })\n          },\n        }}\n      >\n        <GroupContext.Provider value={context}>\n          {render({ props, defaultTag: DEFAULT_GROUP_TAG, name: 'Switch.Group' })}\n        </GroupContext.Provider>\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nlet DEFAULT_SWITCH_TAG = 'button' as const\ninterface SwitchRenderPropArg {\n  checked: boolean\n}\ntype SwitchPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-checked'\n  | 'aria-labelledby'\n  | 'aria-describedby'\n  | 'onClick'\n  | 'onKeyUp'\n  | 'onKeyPress'\n\nexport function Switch<TTag extends ElementType = typeof DEFAULT_SWITCH_TAG>(\n  props: Props<TTag, SwitchRenderPropArg, SwitchPropsWeControl | 'checked' | 'onChange'> & {\n    checked: boolean\n    onChange(checked: boolean): void\n  }\n) {\n  let { checked, onChange, ...passThroughProps } = props\n  let id = `headlessui-switch-${useId()}`\n  let groupContext = useContext(GroupContext)\n\n  let toggle = useCallback(() => onChange(!checked), [onChange, checked])\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      event.preventDefault()\n      toggle()\n    },\n    [toggle]\n  )\n  let handleKeyUp = useCallback(\n    (event: ReactKeyboardEvent<HTMLElement>) => {\n      if (event.key !== Keys.Tab) event.preventDefault()\n      if (event.key === Keys.Space) toggle()\n    },\n    [toggle]\n  )\n\n  // This is needed so that we can \"cancel\" the click event when we use the `Enter` key on a button.\n  let handleKeyPress = useCallback(\n    (event: ReactKeyboardEvent<HTMLElement>) => event.preventDefault(),\n    []\n  )\n\n  let slot = useMemo<SwitchRenderPropArg>(() => ({ checked }), [checked])\n  let propsWeControl = {\n    id,\n    ref: groupContext === null ? undefined : groupContext.setSwitch,\n    role: 'switch',\n    tabIndex: 0,\n    'aria-checked': checked,\n    'aria-labelledby': groupContext?.labelledby,\n    'aria-describedby': groupContext?.describedby,\n    onClick: handleClick,\n    onKeyUp: handleKeyUp,\n    onKeyPress: handleKeyPress,\n  }\n\n  if (passThroughProps.as === 'button') {\n    Object.assign(propsWeControl, { type: 'button' })\n  }\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_SWITCH_TAG,\n    name: 'Switch',\n  })\n}\n\n// ---\n\nSwitch.Group = Group\nSwitch.Label = Label\nSwitch.Description = Description\n","import { once } from '../../../utils/once'\nimport { disposables } from '../../../utils/disposables'\n\nfunction addClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.add(...classes)\n}\n\nfunction removeClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.remove(...classes)\n}\n\nexport enum Reason {\n  Finished = 'finished',\n  Cancelled = 'cancelled',\n}\n\nfunction waitForTransition(node: HTMLElement, done: (reason: Reason) => void) {\n  let d = disposables()\n\n  if (!node) return d.dispose\n\n  // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n  let { transitionDuration, transitionDelay } = getComputedStyle(node)\n\n  let [durationMs, delaysMs] = [transitionDuration, transitionDelay].map(value => {\n    let [resolvedValue = 0] = value\n      .split(',')\n      // Remove falsy we can't work with\n      .filter(Boolean)\n      // Values are returned as `0.3s` or `75ms`\n      .map(v => (v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000))\n      .sort((a, z) => z - a)\n\n    return resolvedValue\n  })\n\n  // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n  if (durationMs !== 0) {\n    d.setTimeout(() => {\n      done(Reason.Finished)\n    }, durationMs + delaysMs)\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished)\n  }\n\n  // If we get disposed before the timeout runs we should cleanup anyway\n  d.add(() => done(Reason.Cancelled))\n\n  return d.dispose\n}\n\nexport function transition(\n  node: HTMLElement,\n  base: string[],\n  from: string[],\n  to: string[],\n  done?: (reason: Reason) => void\n) {\n  let d = disposables()\n  let _done = done !== undefined ? once(done) : () => {}\n\n  addClasses(node, ...base, ...from)\n\n  d.nextFrame(() => {\n    removeClasses(node, ...from)\n    addClasses(node, ...to)\n\n    d.add(\n      waitForTransition(node, reason => {\n        removeClasses(node, ...to, ...base)\n        return _done(reason)\n      })\n    )\n  })\n\n  // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n  d.add(() => removeClasses(node, ...base, ...from, ...to))\n\n  // When we get disposed early, than we should also call the done method but switch the reason.\n  d.add(() => _done(Reason.Cancelled))\n\n  return d.dispose\n}\n","import { useRef, useEffect } from 'react'\n\nexport function useIsInitialRender() {\n  let initial = useRef(true)\n\n  useEffect(() => {\n    initial.current = false\n  }, [])\n\n  return initial.current\n}\n","export function once<T>(cb: (...args: T[]) => void) {\n  let state = { called: false }\n\n  return (...args: T[]) => {\n    if (state.called) return\n    state.called = true\n    return cb(...args)\n  }\n}\n","import React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\nimport { Props } from '../../types'\n\nimport { useId } from '../../hooks/use-id'\nimport { useIsInitialRender } from '../../hooks/use-is-initial-render'\nimport { match } from '../../utils/match'\nimport { useIsMounted } from '../../hooks/use-is-mounted'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\nimport { Features, PropsForFeatures, render, RenderStrategy } from '../../utils/render'\nimport { Reason, transition } from './utils/transition'\n\ntype ID = ReturnType<typeof useId>\n\nfunction useSplitClasses(classes: string = '') {\n  return useMemo(() => classes.split(' ').filter(className => className.trim().length > 1), [\n    classes,\n  ])\n}\n\ninterface TransitionContextValues {\n  show: boolean\n  appear: boolean\n}\nlet TransitionContext = createContext<TransitionContextValues | null>(null)\nTransitionContext.displayName = 'TransitionContext'\n\nenum TreeStates {\n  Visible = 'visible',\n  Hidden = 'hidden',\n}\n\nexport interface TransitionClasses {\n  enter?: string\n  enterFrom?: string\n  enterTo?: string\n  leave?: string\n  leaveFrom?: string\n  leaveTo?: string\n}\n\nexport interface TransitionEvents {\n  beforeEnter?: () => void\n  afterEnter?: () => void\n  beforeLeave?: () => void\n  afterLeave?: () => void\n}\n\ntype TransitionChildProps<TTag> = Props<TTag, TransitionChildRenderPropArg> &\n  PropsForFeatures<typeof TransitionChildRenderFeatures> &\n  TransitionClasses &\n  TransitionEvents & { appear?: boolean }\n\nfunction useTransitionContext() {\n  let context = useContext(TransitionContext)\n\n  if (context === null) {\n    throw new Error(\n      'A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.'\n    )\n  }\n\n  return context\n}\n\nfunction useParentNesting() {\n  let context = useContext(NestingContext)\n\n  if (context === null) {\n    throw new Error(\n      'A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.'\n    )\n  }\n\n  return context\n}\n\ninterface NestingContextValues {\n  children: MutableRefObject<{ id: ID; state: TreeStates }[]>\n  register: (id: ID) => () => void\n  unregister: (id: ID, strategy?: RenderStrategy) => void\n}\n\nlet NestingContext = createContext<NestingContextValues | null>(null)\nNestingContext.displayName = 'NestingContext'\n\nfunction hasChildren(\n  bag: NestingContextValues['children'] | { children: NestingContextValues['children'] }\n): boolean {\n  if ('children' in bag) return hasChildren(bag.children)\n  return bag.current.filter(({ state }) => state === TreeStates.Visible).length > 0\n}\n\nfunction useNesting(done?: () => void) {\n  let doneRef = useRef(done)\n  let transitionableChildren = useRef<NestingContextValues['children']['current']>([])\n  let mounted = useIsMounted()\n\n  useEffect(() => {\n    doneRef.current = done\n  }, [done])\n\n  let unregister = useCallback(\n    (childId: ID, strategy = RenderStrategy.Hidden) => {\n      let idx = transitionableChildren.current.findIndex(({ id }) => id === childId)\n      if (idx === -1) return\n\n      match(strategy, {\n        [RenderStrategy.Unmount]() {\n          transitionableChildren.current.splice(idx, 1)\n        },\n        [RenderStrategy.Hidden]() {\n          transitionableChildren.current[idx].state = TreeStates.Hidden\n        },\n      })\n\n      if (!hasChildren(transitionableChildren) && mounted.current) {\n        doneRef.current?.()\n      }\n    },\n    [doneRef, mounted, transitionableChildren]\n  )\n\n  let register = useCallback(\n    (childId: ID) => {\n      let child = transitionableChildren.current.find(({ id }) => id === childId)\n      if (!child) {\n        transitionableChildren.current.push({ id: childId, state: TreeStates.Visible })\n      } else if (child.state !== TreeStates.Visible) {\n        child.state = TreeStates.Visible\n      }\n\n      return () => unregister(childId, RenderStrategy.Unmount)\n    },\n    [transitionableChildren, unregister]\n  )\n\n  return useMemo(\n    () => ({\n      children: transitionableChildren,\n      register,\n      unregister,\n    }),\n    [register, unregister, transitionableChildren]\n  )\n}\n\nfunction noop() {}\nlet eventNames = ['beforeEnter', 'afterEnter', 'beforeLeave', 'afterLeave'] as const\nfunction ensureEventHooksExist(events: TransitionEvents) {\n  let result = {} as Record<keyof typeof events, () => void>\n  for (let name of eventNames) {\n    result[name] = events[name] ?? noop\n  }\n  return result\n}\n\nfunction useEvents(events: TransitionEvents) {\n  let eventsRef = useRef(ensureEventHooksExist(events))\n\n  useEffect(() => {\n    eventsRef.current = ensureEventHooksExist(events)\n  }, [events])\n\n  return eventsRef\n}\n\n// ---\n\nlet DEFAULT_TRANSITION_CHILD_TAG = 'div' as const\ntype TransitionChildRenderPropArg = MutableRefObject<HTMLDivElement>\nlet TransitionChildRenderFeatures = Features.RenderStrategy\n\nfunction TransitionChild<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag>\n) {\n  let {\n    // Event \"handlers\"\n    beforeEnter,\n    afterEnter,\n    beforeLeave,\n    afterLeave,\n\n    // Class names\n    enter,\n    enterFrom,\n    enterTo,\n    leave,\n    leaveFrom,\n    leaveTo,\n\n    // @ts-expect-error\n    ...rest\n  } = props as typeof props\n  let container = useRef<HTMLElement | null>(null)\n  let [state, setState] = useState(TreeStates.Visible)\n  let strategy = rest.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n  let { show, appear } = useTransitionContext()\n  let { register, unregister } = useParentNesting()\n\n  let initial = useIsInitialRender()\n  let id = useId()\n\n  let isTransitioning = useRef(false)\n\n  let nesting = useNesting(() => {\n    // When all children have been unmounted we can only hide ourselves if and only if we are not\n    // transitioning ourselves. Otherwise we would unmount before the transitions are finished.\n    if (!isTransitioning.current) {\n      setState(TreeStates.Hidden)\n      unregister(id)\n      events.current.afterLeave()\n    }\n  })\n\n  useIsoMorphicEffect(() => {\n    if (!id) return\n    return register(id)\n  }, [register, id])\n\n  useIsoMorphicEffect(() => {\n    // If we are in another mode than the Hidden mode then ignore\n    if (strategy !== RenderStrategy.Hidden) return\n    if (!id) return\n\n    // Make sure that we are visible\n    if (show && state !== TreeStates.Visible) {\n      setState(TreeStates.Visible)\n      return\n    }\n\n    match(state, {\n      [TreeStates.Hidden]: () => unregister(id),\n      [TreeStates.Visible]: () => register(id),\n    })\n  }, [state, id, register, unregister, show, strategy])\n\n  let enterClasses = useSplitClasses(enter)\n  let enterFromClasses = useSplitClasses(enterFrom)\n  let enterToClasses = useSplitClasses(enterTo)\n\n  let leaveClasses = useSplitClasses(leave)\n  let leaveFromClasses = useSplitClasses(leaveFrom)\n  let leaveToClasses = useSplitClasses(leaveTo)\n\n  let events = useEvents({ beforeEnter, afterEnter, beforeLeave, afterLeave })\n\n  useEffect(() => {\n    if (state === TreeStates.Visible && container.current === null) {\n      throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?')\n    }\n  }, [container, state])\n\n  // Skipping initial transition\n  let skip = initial && !appear\n\n  useIsoMorphicEffect(() => {\n    let node = container.current\n    if (!node) return\n    if (skip) return\n\n    isTransitioning.current = true\n\n    if (show) events.current.beforeEnter()\n    if (!show) events.current.beforeLeave()\n\n    return show\n      ? transition(node, enterClasses, enterFromClasses, enterToClasses, reason => {\n          isTransitioning.current = false\n          if (reason === Reason.Finished) events.current.afterEnter()\n        })\n      : transition(node, leaveClasses, leaveFromClasses, leaveToClasses, reason => {\n          isTransitioning.current = false\n\n          if (reason !== Reason.Finished) return\n\n          // When we don't have children anymore we can safely unregister from the parent and hide\n          // ourselves.\n          if (!hasChildren(nesting)) {\n            setState(TreeStates.Hidden)\n            unregister(id)\n            events.current.afterLeave()\n          }\n        })\n  }, [\n    events,\n    id,\n    isTransitioning,\n    unregister,\n    nesting,\n    container,\n    skip,\n    show,\n    enterClasses,\n    enterFromClasses,\n    enterToClasses,\n    leaveClasses,\n    leaveFromClasses,\n    leaveToClasses,\n  ])\n\n  let propsWeControl = { ref: container }\n  let passthroughProps = rest\n\n  return (\n    <NestingContext.Provider value={nesting}>\n      {render({\n        props: { ...passthroughProps, ...propsWeControl },\n        defaultTag: DEFAULT_TRANSITION_CHILD_TAG,\n        features: TransitionChildRenderFeatures,\n        visible: state === TreeStates.Visible,\n        name: 'Transition.Child',\n      })}\n    </NestingContext.Provider>\n  )\n}\n\nexport function Transition<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag> & { show: boolean; appear?: boolean }\n) {\n  // @ts-expect-error\n  let { show, appear = false, unmount, ...passthroughProps } = props as typeof props\n\n  if (![true, false].includes(show)) {\n    throw new Error('A <Transition /> is used but it is missing a `show={true | false}` prop.')\n  }\n\n  let [state, setState] = useState(show ? TreeStates.Visible : TreeStates.Hidden)\n\n  let nestingBag = useNesting(() => {\n    setState(TreeStates.Hidden)\n  })\n\n  let initial = useIsInitialRender()\n  let transitionBag = useMemo<TransitionContextValues>(\n    () => ({ show, appear: appear || !initial }),\n    [show, appear, initial]\n  )\n\n  useEffect(() => {\n    if (show) {\n      setState(TreeStates.Visible)\n    } else if (!hasChildren(nestingBag)) {\n      setState(TreeStates.Hidden)\n    }\n  }, [show, nestingBag])\n\n  let sharedProps = { unmount }\n\n  return (\n    <NestingContext.Provider value={nestingBag}>\n      <TransitionContext.Provider value={transitionBag}>\n        {render({\n          props: {\n            ...sharedProps,\n            as: Fragment,\n            children: <TransitionChild {...sharedProps} {...passthroughProps} />,\n          },\n          defaultTag: Fragment,\n          features: TransitionChildRenderFeatures,\n          visible: state === TreeStates.Visible,\n          name: 'Transition',\n        })}\n      </TransitionContext.Provider>\n    </NestingContext.Provider>\n  )\n}\n\nTransition.Child = TransitionChild\nTransition.Root = Transition\n","import { useRef, useEffect } from 'react'\n\nexport function useIsMounted() {\n  let mounted = useRef(true)\n\n  useEffect(() => {\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  return mounted\n}\n","import {\n  useRef,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useFocusTrap } from '../../hooks/use-focus-trap'\n\nlet DEFAULT_FOCUS_TRAP_TAG = 'div' as const\n\nexport function FocusTrap<TTag extends ElementType = typeof DEFAULT_FOCUS_TRAP_TAG>(\n  props: Props<TTag> & { initialFocus?: MutableRefObject<HTMLElement | null> }\n) {\n  let containers = useRef<Set<HTMLElement>>(new Set())\n  let { initialFocus, ...passthroughProps } = props\n\n  useFocusTrap(containers, true, { initialFocus })\n\n  let propsWeControl = {\n    ref(element: HTMLElement | null) {\n      if (!element) return\n      containers.current.add(element)\n    },\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    defaultTag: DEFAULT_FOCUS_TRAP_TAG,\n    name: 'FocusTrap',\n  })\n}\n"],"names":["Features","RenderStrategy","Keys","match","value","lookup","returnValue","args","error","Error","Object","keys","map","key","join","captureStackTrace","render","props","slot","defaultTag","features","visible","name","_render","featureFlags","None","Static","isStatic","rest","unmount","Unmount","Hidden","hidden","style","display","tag","omit","as","Component","children","refName","passThroughProps","refRelatedProps","undefined","ref","resolvedChildren","className","Fragment","length","isValidElement","Array","isArray","line","cloneElement","assign","existingProps","functionsToMerge","clone","func","event","defaultPrevented","mergeEventFunctions","object","compact","createElement","forwardRefWithAs","component","forwardRef","displayName","keysToOmit","useSyncRefs","refs","cache","useRef","useEffect","current","useCallback","isDisabledReactIssue7711","element","parent","parentElement","legend","HTMLFieldSetElement","HTMLLegendElement","isParentDisabled","getAttribute","previous","previousElementSibling","isFirstLegend","useIsoMorphicEffect","window","useLayoutEffect","state","serverHandoffComplete","id","generateId","useId","useState","setId","Focus","FocusResult","Direction","FocusableMode","focusableSelector","selector","getFocusableElements","container","document","body","from","querySelectorAll","isFocusableElement","mode","Strict","matches","Loose","next","focusElement","focus","preventScroll","focusIn","elements","active","activeElement","direction","First","Next","Previous","Last","startIndex","Math","max","indexOf","focusOptions","NoScroll","offset","total","nextIdx","WrapAround","Underflow","Overflow","hasAttribute","setAttribute","Success","contains","containers","useWindowEvent","type","listener","options","addEventListener","removeEventListener","useFocusTrap","enabled","restoreElement","previousActiveElement","mounted","size","initialFocus","_options$initialFocus","_options$initialFocus3","couldFocus","Tab","preventDefault","shiftKey","toElement","target","HTMLElement","stopPropagation","interactables","Set","originals","Map","inert","restore","original","get","removeAttribute","StackMessage","StackContext","createContext","useStackContext","useContext","StackProvider","onUpdate","parentUpdate","notify","React","Provider","ForcePortalRootContext","ForcePortalRoot","force","DEFAULT_PORTAL_TAG","Portal","passthroughProps","forceInRoot","groupTarget","PortalGroupContext","existingRoot","getElementById","root","appendChild","setTarget","usePortalTarget","AddElement","RemoveElement","useElementStack","removeChild","childNodes","createPortal","DEFAULT_GROUP_TAG","Group","DialogStates","ActionTypes","DescriptionContext","useDescriptionContext","context","err","useDescriptions","descriptionIds","setDescriptionIds","useMemo","register","existing","slice","idx","splice","contextBag","Description","propsWeControl","reducers","SetTitleId","action","titleId","DialogContext","useDialogContext","Dialog","stateReducer","DisclosureStates","DialogRenderFeatures","open","onClose","internalDialogRef","dialogRef","hasOpen","hasOwnProperty","hasOnClose","dialogState","Open","Closed","useReducer","descriptionId","dispatch","close","setTitleId","overflow","documentElement","paddingRight","scrollbarWidth","innerWidth","clientWidth","observer","IntersectionObserver","entries","entry","boundingClientRect","x","y","width","height","observe","disconnect","add","forEach","child","set","has","useInertOthers","describedby","DescriptionProvider","message","role","onClick","onKeyDown","Escape","Overlay","overlayRef","handleClick","currentTarget","Title","ToggleDisclosure","disclosureState","LinkPanel","linkedPanel","UnlinkPanel","SetButtonId","buttonId","SetPanelId","panelId","DisclosureContext","useDisclosureContext","Disclosure","DEFAULT_DISCLOSURE_TAG","defaultOpen","reducerBag","ListboxStates","Button","buttonRef","handleKeyDown","Space","Enter","handleKeyUp","disabled","onKeyUp","PanelRenderFeatures","Panel","panelRef","disposables","api","requestAnimationFrame","raf","cancelAnimationFrame","nextFrame","setTimeout","timer","clearTimeout","cb","push","dispose","useDisposables","d","useComputed","dependencies","setValue","cbRef","calculateActiveIndex","resolvers","items","resolveItems","currentActiveIndex","resolveActiveIndex","activeIndex","nextActiveIndex","findIndex","item","resolveDisabled","reverse","all","Specific","resolveId","Nothing","assertNever","CloseListbox","listboxState","activeOptionIndex","OpenListbox","SetDisabled","GoToOption","dataRef","searchQuery","Search","toLowerCase","option","textValue","_option$dataRef$curre","startsWith","ClearSearch","RegisterOption","UnregisterOption","nextOptions","currentActiveOption","a","ListboxContext","useListboxContext","Listbox","DEFAULT_LISTBOX_TAG","onChange","propsRef","labelRef","createRef","optionsRef","_buttonRef$current","_optionsRef$current","MenuStates","ArrowDown","ArrowUp","_state$buttonRef$curr","labelledby","_state$optionsRef$cur","OptionsRenderFeatures","Options","searchDisposables","_state$buttonRef$curr3","Home","PageUp","End","PageDown","_state$buttonRef$curr4","_state$labelRef$curre2","_state$buttonRef$curr5","_state$options$state$","tabIndex","useTreeWalker","accept","walk","acceptRef","walkRef","acceptNode","node","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","nextNode","currentNode","Label","_state$buttonRef$curr2","Option","selected","bag","_document$getElementB","textContent","_document$getElementB2","select","_document$getElementB4","scrollIntoView","block","_state$buttonRef$curr6","handleFocus","handleMove","handleLeave","onFocus","onPointerMove","onMouseMove","onPointerLeave","onMouseLeave","CloseMenu","menuState","activeItemIndex","OpenMenu","GoToItem","RegisterItem","UnregisterItem","nextItems","currentActiveItem","MenuContext","useMenuContext","Menu","DEFAULT_MENU_TAG","itemsRef","_itemsRef$current","PopoverStates","_state$itemsRef$curre","ItemsRenderFeatures","Items","FILTER_REJECT","FILTER_SKIP","FILTER_ACCEPT","click","_state$items$state$ac","DEFAULT_ITEM_TAG","Item","_document$getElementB3","TogglePopover","popoverState","ClosePopover","SetButton","button","SetPanel","panel","PopoverContext","usePopoverContext","Popover","PopoverGroupContext","usePopoverGroupContext","PopoverPanelContext","registerBag","groupContext","registerPopover","isFocusWithinPopoverGroup","internalButtonRef","closeOthers","panelContext","isWithinPanel","activeElementRef","previousActiveElementRef","_state$button2","focusableElements","previousIdx","_state$button3","OverlayRenderFeatures","internalPanelRef","result","_state$button7","buttonIdx","filter","_internalPanelRef$cur","_internalPanelRef$cur2","groupRef","popovers","setPopovers","unregisterPopover","registerbag","_groupRef$current","some","popover","LabelContext","useLabelContext","useLabels","labelIds","setLabelIds","passive","allProps","OptionState","radio","RadioGroupContext","useRadioGroupContext","RadioGroup","LabelProvider","radioGroupRef","firstOption","find","containsCheckedOption","triggerChange","nextValue","nextOption","_options$find","ArrowLeft","activeOption","ArrowRight","registerOption","change","optionRef","initialFlags","flags","setFlags","addFlag","flag","hasFlag","Boolean","removeFlag","toggleFlag","useFlags","Empty","radioGroupDisabled","radioGroupValue","Active","handleBlur","isDisabled","checked","onBlur","GroupContext","Reason","Switch","toggle","handleKeyPress","setSwitch","onKeyPress","useIsInitialRender","initial","addClasses","classes","classList","removeClasses","remove","transition","base","to","done","_done","called","once","getComputedStyle","transitionDuration","transitionDelay","split","v","includes","parseFloat","sort","z","durationMs","Finished","Cancelled","waitForTransition","reason","useSplitClasses","trim","switchElement","setSwitchElement","TreeStates","TransitionContext","NestingContext","hasChildren","Visible","useNesting","doneRef","transitionableChildren","useIsMounted","unregister","childId","strategy","noop","eventNames","ensureEventHooksExist","events","TransitionChildRenderFeatures","TransitionChild","beforeEnter","afterEnter","beforeLeave","afterLeave","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","setState","useTransitionContext","show","appear","useParentNesting","isTransitioning","nesting","enterClasses","enterFromClasses","enterToClasses","leaveClasses","leaveFromClasses","leaveToClasses","eventsRef","useEvents","skip","Transition","nestingBag","transitionBag","sharedProps","Child","Root"],"mappings":"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"}