{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\Desktop\\\\administrator\\\\src\\\\components\\\\Sidebar\\\\SubMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport { Link, useLocation } from 'react-router-dom';\nimport { useState } from 'react';\nimport * as S from './SubMenu.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SubMenu = ({\n  menu: {\n    title,\n    items = [],\n    icon,\n    target\n  }\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const location = useLocation();\n\n  const toggle = () => {\n    setOpen(!open);\n  };\n\n  const isItemActive = item => location.pathname === item.target;\n\n  const props = items.length ? {\n    onClick: toggle\n  } : {\n    as: Link,\n    to: target\n  };\n  const active = items.length ? items.some(isItemActive) : location.pathname === target;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(S.Item, { ...props,\n      active: active,\n      children: [/*#__PURE__*/_jsxDEV(S.IconWrapper, {\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.MenuTitle, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), items.length ? /*#__PURE__*/_jsxDEV(S.ArrowWrapper, {\n        children: /*#__PURE__*/_jsxDEV(S.StyledChevronDownIcon, {\n          open: open\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), open && /*#__PURE__*/_jsxDEV(S.SidebarSubmenuList, {\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(S.SidebarSubmenu, {\n        to: item.target,\n        active: isItemActive(item),\n        children: item.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SubMenu, \"olzNRZ2T/h8MD1qG8kIUoTFjKXk=\", false, function () {\n  return [useLocation];\n});\n\n_c = SubMenu;\nexport default SubMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubMenu\");","map":{"version":3,"sources":["C:/Users/Carlos/Desktop/administrator/src/components/Sidebar/SubMenu.tsx"],"names":["Link","useLocation","useState","S","SubMenu","menu","title","items","icon","target","open","setOpen","location","toggle","isItemActive","item","pathname","props","length","onClick","as","to","active","some","map","index"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,CAAZ,MAAmB,kBAAnB;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAK,GAAG,EAAjB;AAAqBC,IAAAA,IAArB;AAA2BC,IAAAA;AAA3B;AADS,CAAD,KAEI;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMU,QAAQ,GAAGX,WAAW,EAA5B;;AACA,QAAMY,MAAM,GAAG,MAAM;AACnBF,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAFD;;AAIA,QAAMI,YAAY,GAAIC,IAAD,IAAUH,QAAQ,CAACI,QAAT,KAAsBD,IAAI,CAACN,MAA1D;;AAEA,QAAMQ,KAAK,GAAGV,KAAK,CAACW,MAAN,GACV;AAAEC,IAAAA,OAAO,EAAEN;AAAX,GADU,GAEV;AACEO,IAAAA,EAAE,EAAEpB,IADN;AAEEqB,IAAAA,EAAE,EAAEZ;AAFN,GAFJ;AAOA,QAAMa,MAAM,GAAGf,KAAK,CAACW,MAAN,GACXX,KAAK,CAACgB,IAAN,CAAWT,YAAX,CADW,GAEXF,QAAQ,CAACI,QAAT,KAAsBP,MAF1B;AAIA,sBACE;AAAA,4BACE,QAAC,CAAD,CAAG,IAAH,OAAaQ,KAAb;AAA4B,MAAA,MAAM,EAAEK,MAApC;AAAA,8BACE,QAAC,CAAD,CAAG,WAAH;AAAA,kBAAgBd;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,CAAD,CAAG,SAAH;AAAA,kBAAcF;AAAd;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGC,KAAK,CAACW,MAAN,gBACC,QAAC,CAAD,CAAG,YAAH;AAAA,+BACE,QAAC,CAAD,CAAG,qBAAH;AAAyB,UAAA,IAAI,EAAER;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,gBAKC,qCARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAYGA,IAAI,iBACH,QAAC,CAAD,CAAG,kBAAH;AAAA,gBACGH,KAAK,CAACiB,GAAN,CAAU,CAACT,IAAD,EAAOU,KAAP,kBACT,QAAC,CAAD,CAAG,cAAH;AACE,QAAA,EAAE,EAAEV,IAAI,CAACN,MADX;AAGE,QAAA,MAAM,EAAEK,YAAY,CAACC,IAAD,CAHtB;AAAA,kBAKGA,IAAI,CAACT;AALR,SAEOmB,KAFP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAlDD;;GAAMrB,O;UAIaH,W;;;KAJbG,O;AAkEN,eAAeA,OAAf","sourcesContent":["import { Link, useLocation } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport * as S from './SubMenu.styles';\r\n\r\nconst SubMenu = ({\r\n  menu: { title, items = [], icon, target },\r\n}: SubMenuProps) => {\r\n  const [open, setOpen] = useState(false);\r\n  const location = useLocation();\r\n  const toggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const isItemActive = (item) => location.pathname === item.target;\r\n\r\n  const props = items.length\r\n    ? { onClick: toggle }\r\n    : {\r\n        as: Link,\r\n        to: target,\r\n      };\r\n\r\n  const active = items.length\r\n    ? items.some(isItemActive)\r\n    : location.pathname === target;\r\n\r\n  return (\r\n    <div>\r\n      <S.Item {...(props as any)} active={active}>\r\n        <S.IconWrapper>{icon}</S.IconWrapper>\r\n        <S.MenuTitle>{title}</S.MenuTitle>\r\n        {items.length ? (\r\n          <S.ArrowWrapper>\r\n            <S.StyledChevronDownIcon open={open} />\r\n          </S.ArrowWrapper>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </S.Item>\r\n      {open && (\r\n        <S.SidebarSubmenuList>\r\n          {items.map((item, index) => (\r\n            <S.SidebarSubmenu\r\n              to={item.target}\r\n              key={index}\r\n              active={isItemActive(item)}\r\n            >\r\n              {item.title}\r\n            </S.SidebarSubmenu>\r\n          ))}\r\n        </S.SidebarSubmenuList>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface SubMenuProps {\r\n  menu: {\r\n    title: string;\r\n    items?: SubMenuItem[];\r\n    icon: JSX.Element;\r\n    target?: string;\r\n  };\r\n}\r\n\r\ninterface SubMenuItem {\r\n  title: string;\r\n  target: string;\r\n}\r\n\r\nexport default SubMenu;\r\n"]},"metadata":{},"sourceType":"module"}